{"version":3,"sources":["../src/GeneralRouting.js"],"names":[],"mappings":"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","file":"GeneralRouting.js","sourcesContent":["import expressJSONSchema from 'express-jsonschema';\nimport ProjectRegistry from './ProjectRegistry';\nimport Routes from './Routes';\n\nvar validate = expressJSONSchema.validate;\n\nvar onValidatorError = function(err, req, res, next) {\n\n    if (err.name === 'JsonSchemaValidation') {\n\n        res.status(400);\n\n        var responseData = {\n            message: 'Errors occurred during ' + req.method + ' request to ' + req.url + '.',\n            errors: err.validations\n        };\n\n        if (req.xhr || req.get('Content-Type') === 'application/json') {\n            res.json(responseData);\n        } else {\n            console.log(err.stack);\n            res.send();\n        }\n\n    } else {\n        next(err);\n    }\n};\n\n/**\n * GeneralRouting provides methods for configuring\n * framework routing from the routes.json file.\n */\nclass GeneralRouting {\n\n    /**\n     * configureSchema sets up json-schema on the route.\n     * @param {Router} router\n     * @param {Object} route\n     */\n    configureSchema(router, route) {\n\n        if (route.schema) {\n            router[Routes.defaultMethod(route.method)].call(router, route.href, validate(route.schema));\n            router.use(onValidatorError);\n\n        }\n\n        return this;\n    }\n\n    /**\n     * configureMiddleWare sets up middleware on the route\n     * @param {Router} router\n     * @param {Object} route\n     */\n    configureMiddleWare(router, route) {\n\n        if (route.middleware) {\n            route.middleware.split(',').forEach(mware => {\n\n                if (!ProjectRegistry.middleware.hasOwnProperty(mware))\n                    throw new Error('funcListToArray: Func: ' + mware + ' was not found!');\n\n                router[Routes.defaultMethod(route.method)].call(router, route.href, (req, res, next) => ProjectRegistry.middleware[mware](req, res, next, route));\n\n            });\n        }\n\n        return this;\n    }\n\n    /**\n     * configureQueries sets up queries on the route.\n     * @param {Router} router\n     * @param {Object} route\n     * @deprecated\n     */\n    configureQueries(router, route) {\n\n        if (route.query) {\n            router[Routes.defaultMethod(route.method)](route.href, function(req, res, next) {\n                ProjectRegistry.queries[route.query.script](ProjectRegistry.models, route.query, req, res, next);\n            });\n        }\n\n        return this;\n    }\n\n    /**\n     * configureControllers sets up controllers on the route\n     * @param {Router} router\n     * @param {Object} route\n     */\n    configureControllers(router, route) {\n\n        if (route.controller) {\n\n            var list = route.controller.split('.');\n            var Constructor = ProjectRegistry.controllers[list[0]];\n            var method = list[1];\n            var instance;\n\n            router[Routes.defaultMethod(route.method)](route.href, (req, res) => {\n                instance = new Constructor(req, res, route.vars);\n                instance[method]();\n            });\n\n        }\n\n        return this;\n    }\n\n\n\n}\nexport default GeneralRouting;\n"]}