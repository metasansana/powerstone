{"version":3,"sources":["../../src/common/Application.js"],"names":[],"mappings":"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","file":"Application.js","sourcesContent":["import Module from './Module';\nimport events from 'events';\n\n/**\n * Application is the main class of the framework.\n * @param {String} path The path to intialize this Application to. \n *\n * @property {string} path - The path this Application was initialized to.\n * @property {ManagedServer} server - The managed http server.  \n * @property {object} modules - Modules loaded into memory.\n * @property {object} controllers - Controllers loaded into memory.\n * @property {object} models - Models loaded into memory.\n * @property {object} middleware - Middleware loaded into memory.\n * @property {object} pool - A pool of connections the Application has made.\n * @property {object} framework.express - Loaded modules for express\n * @property {object} framework.restify - Loaded modules for restify\n * @property {object} framework.pipes - Loaded modules for the pipes framework\n */\nclass Application {\n\n    constructor(path) {\n\n        this.path = path;\n        this.server = null;\n        this.modules = {};\n        this.controllers = {};\n        this.models = {};\n        this.middleware = {};\n        this.pool = {};\n        this.framework = {\n            pipes: {},\n            run: {},\n            connectors: {},\n            express: {\n                engines: {},\n                middleware: {}\n            },\n            restify: {\n                plugins: {}\n            }\n        };\n        this.events = {\n            ERROR: 'error',\n            STARTED: 'started'\n        };\n        this._events = new events.EventEmitter();\n\n    }\n\n    /**\n     * on \n     */\n    on() {\n        this._events.on.apply(this._events, arguments);\n    }\n\n\n\n    /**\n     * interpolate swaps a list of string for values\n     * from a source.\n     *\n     * Use it to turn for example, a list of controller\n     * strings into an object.\n     * @param {object} source The source to swap from\n     * @param {array|string} list The list or string to interpolate\n     * @returns {object}\n     */\n    interpolate(source, list) {\n\n        var multi = Array.isArray(list);\n        var result;\n        list = (multi) ? list : [list];\n\n        result = list.map(l => {\n\n            if (!source[l])\n                throw new Error(`Application#interpolate: The source does not\n            contain a member ${l}!`);\n\n            return source[l];\n\n        });\n\n        return (multi) ? result : result[0];\n    }\n\n    /**\n     * resolveMiddleware resolves a list of strings into registered middleware.\n     * @param {array<string|function>} list \n     * @returns {array<function>}\n     * @throws Will throw if an unregistered string is encountered.\n     */\n    resolveMiddleware(list) {\n        return list.map(w => {\n\n            if (typeof w === 'function') return w;\n\n            if (!this.middleware[w])\n                throw new Error(`Unknown middleware: '${w}' declared in route file!`);\n\n            return this.middleware[w];\n\n        });\n    }\n\n    /**\n     * resolveAction turns a string into a route action\n     * @param {string} action \n     * @param {string} method \n     * @param {object} definition \n     * @throws Will throw if you specify an unknown controller\n     */\n    resolveAction(action, method, definition) {\n\n        var split = action.split('.');\n        var Controller;\n\n        Controller = this.controllers[split[0]];\n        method = split[1] || method;\n\n        if (typeof Controller !== 'function')\n            throw new Error(`Controller '${split[0]}' must be a constructor not`+\n                ` '${typeof Controller}'!`);\n\n        return function(req, res) {\n            var instance = new Controller(req, res, definition);\n            if (typeof instance[method] !== 'function') {\n                res.status(500);\n                return res.send(`\n                    Unknown method '${method}' in route description\n                    for controller ` +\n                    `\n                    '${action[0]}'!`);\n            }\n\n            instance[method]();\n        };\n\n\n    }\n\n    /**\n     * run this Application\n     * @return {Promise}\n     */\n    run() {\n\n        var loader = this.getLoader();\n        var m = new Module('main', '', loader.getConfiguration(), loader, this);\n\n        this.modules.main = m;\n\n        m.modules(this.modules);\n        m.framework(this.framework.connectors, this.framework.pipes);\n        return Promise.all(m.connections(this.framework.connectors, this.pool)).\n        then(() => m.userland(this.controllers, this.models, this.middleware));\n\n    }\n}\n\nexport default Application;\n"]}