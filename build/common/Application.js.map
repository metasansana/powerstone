{"version":3,"sources":["../../src/common/Application.js"],"names":[],"mappings":";;;;;;;;;;;;sBAAmB,UAAU;;;;6BACH,iBAAiB;;;;+BACnB,oBAAoB;;;;sBACzB,UAAU;;;;8BACF,kBAAkB;;;;sBAC1B,QAAQ;;;;;;;;;IAMrB,WAAW;AAEF,aAFT,WAAW,CAED,IAAI,EAAE;8BAFhB,WAAW;;AAGT,YAAI,CAAC,IAAI,GAAG,SAAS,CAAC;AACtB,YAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACjB,YAAI,CAAC,MAAM,GAAG,IAAI,CAAC;AACnB,YAAI,CAAC,MAAM,GAAG,IAAI,CAAC;AACnB,YAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACjB,YAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;AACnB,YAAI,CAAC,OAAO,GAAG,IAAI,oBAAO,YAAY,EAAE,CAAC;AACzC,YAAI,CAAC,MAAM,GAAG;AACV,iBAAK,EAAE,OAAO;AACd,mBAAO,EAAE,SAAS;SACrB,CAAC;KAEL;;;;;;iBAfC,WAAW;;eAoBX,cAAG;AACD,gBAAI,CAAC,OAAO,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;SAClD;;;;;;;;eAME,eAAG;;;AAEF,gBAAI,CAAC,MAAM,GAAG,wBAAW,IAAI,CAAC,IAAI,CAAC,CAAC;AACpC,gBAAI,CAAC,MAAM,GAAG,+BAAkB,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,CAAC;AACpE,gBAAI,CAAC,IAAI,GAAG,wBAAW,EAAE,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;AACrD,gBAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC9B,gBAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC;AAChE,gBAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAA,OAAO;uBAAI,OAAO,CAAC,UAAU,EAAE;aAAA,CAAC,CAAC;AACvD,gBAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAA,OAAO;uBAAI,OAAO,CAAC,cAAc,8BAAa;aAAA,CAAC,CAAC;;AAEtE,mBAAO,6BAAY,IAAI,EAAE,CACzB,IAAI,CAAC;uBAAM,MAAK,QAAQ,CAAC,OAAO,CAAC,UAAA,OAAO;2BAAI,OAAO,CAAC,QAAQ,6BAAgB;iBAAA,CAAC;aAAA,CAAC,CAAC;SAClF;;;WAxCC,WAAW;;;qBA4CF,WAAW","file":"Application.js","sourcesContent":["import Loader from './Loader';\nimport Configuration from './Configuration';\nimport Connections from './conn/Connections';\nimport Module from './Module';\nimport ModuleRegistry from './ModuleRegistry';\nimport events from 'events';\n\n/**\n * Application is the main class of the framework.\n * @param {String} path\n */\nclass Application {\n\n    constructor(path) {\n        this.name = 'default';\n        this.path = path;\n        this.loader = null;\n        this.config = null;\n        this.main = null;\n        this.projects = [];\n        this._events = new events.EventEmitter();\n        this.events = {\n            ERROR: 'error',\n            STARTED: 'started'\n        };\n\n    }\n\n    /**\n     * on \n     */\n    on() {\n        this._events.on.apply(this._events, arguments);\n    }\n\n    /**\n     * run this Application\n     * @return {Promise}\n     */\n    run() {\n\n        this.loader = new Loader(this.path);\n        this.config = new Configuration(this.loader.loadFromConf('config'));\n        this.main = new Module('', this.config, this.loader);\n        this.projects.push(this.main);\n        this.projects = this.projects.concat(this.main.getSubModules());\n        this.projects.forEach(project => project.runPlugins());\n        this.projects.forEach(project => project.setConnections(Connections));\n\n        return Connections.open().\n        then(() => this.projects.forEach(project => project.register(ModuleRegistry)));\n    }\n\n}\n\nexport default Application;\n"]}