{"version":3,"sources":["../../src/common/CompositeModule.js"],"names":[],"mappings":";;;;;;;;;;;;;;;IAKM,eAAe;AAEN,aAFT,eAAe,CAEL,OAAO,EAAE;8BAFnB,eAAe;;AAGb,YAAI,CAAC,UAAU,GAAG,OAAO,CAAC;KAC7B;;;;;;;iBAJC,eAAe;;eAUV,iBAAC,IAAI,EAAE;AACV,gBAAI,CAAC,UAAU,CAAC,OAAO,CAAC,UAAA,CAAC;uBAAI,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC;aAAA,CAAC,CAAC;SACjD;;;;;;;;;eAOQ,mBAAC,UAAU,EAAE,KAAK,EAAE;AACzB,gBAAI,CAAC,UAAU,CAAC,OAAO,CAAC,UAAA,CAAC;uBAAI,CAAC,CAAC,SAAS,CAAC,UAAU,EAAE,KAAK,CAAC;aAAA,CAAC,CAAC;SAChE;;;;;;;;;eAOe,0BAAC,UAAU,EAAE,OAAO,EAAE;AAClC,gBAAI,CAAC,UAAU,CAAC,OAAO,CAAC,UAAA,CAAC;uBAAI,CAAC,CAAC,gBAAgB,CAAC,UAAU,EAAE,OAAO,CAAC;aAAA,CAAC,CAAC;SACzE;;;;;;;;eAMe,0BAAC,OAAO,EAAE;AACtB,gBAAI,CAAC,UAAU,CAAC,OAAO,CAAC,UAAA,CAAC;uBAAI,CAAC,CAAC,gBAAgB,CAAC,OAAO,CAAC;aAAA,CAAC,CAAC;SAC7D;;;;;;;;;eAOU,qBAAC,KAAK,EAAE,KAAK,EAAE;AACtB,mBAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,UAAA,CAAC;uBAAI,CAAC,CAAC,WAAW,CAAC,KAAK,EAAE,KAAK,CAAC;aAAA,CAAC,CAAC;SAChE;;;;;;;;eAMO,kBAAC,WAAW,EAAE,MAAM,EAAE,UAAU,EAAE;AACtC,gBAAI,CAAC,UAAU,CAAC,OAAO,CAAC,UAAA,CAAC;uBAAI,CAAC,CAAC,QAAQ,CAAC,WAAW,EAAE,MAAM,EAAE,UAAU,CAAC;aAAA,CAAC,CAAC;SAC7E;;;;;;;;;;eAQM,iBAAC,GAAG,EAAE,QAAO,EAAE,KAAK,EAAE;AACzB,gBAAI,CAAC,UAAU,CAAC,OAAO,CAAC,UAAA,CAAC;uBAAI,CAAC,CAAC,OAAO,CAAC,GAAG,EAAE,QAAO,EAAE,KAAK,CAAC;aAAA,CAAC,CAAC;SAChE;;;;;;;;eAMM,iBAAC,GAAG,EAAE,OAAO,EAAE;AAClB,gBAAI,CAAC,UAAU,CAAC,OAAO,CAAC,UAAA,CAAC;uBAAI,CAAC,CAAC,OAAO,CAAC,GAAG,EAAE,OAAO,CAAC;aAAA,CAAC,CAAC;SACzD;;;WAzEC,eAAe;;;qBA6EN,eAAe","file":"CompositeModule.js","sourcesContent":["/**\n * CompositeModule provides an api for calling the same\n * method on multiple Modules at once.\n * @param {array} modules \n */\nclass CompositeModule {\n\n    constructor(modules) {\n        this.submodules = modules;\n    }\n\n    /**\n     * modules \n     * @param {object} mods\n     */\n    modules(mods) {\n        this.submodules.forEach(m => m.modules(mods));\n    }\n\n    /**\n     * framework \n     * @param {object} connectors\n     * @param {object} pipes \n     */\n    framework(connectors, pipes) {\n        this.submodules.forEach(m => m.framework(connectors, pipes));\n    }\n\n    /**\n     * expressFramework\n     * @param {object} middleware\n     * @param {object} engines\n     */\n    expressFramework(middleware, engines) {\n        this.submodules.forEach(m => m.expressFramework(middleware, engines));\n    }\n\n    /**\n     * restifyFramework \n     * @param {object} plugins \n     */\n    restifyFramework(plugins) {\n        this.submodules.forEach(m => m.restifyFramework(plugins));\n    }\n\n    /**\n     * connections \n     * @param {object} types \n     * @param {object} conns \n     */\n    connections(types, conns) {\n        return this.submodules.map(m => m.connections(types, conns));\n    }\n\n    /**\n     * userland \n     * @param {object} registry \n     */\n    userland(controllers, models, middleware) {\n        this.submodules.forEach(m => m.userland(controllers, models, middleware));\n    }\n\n    /**\n     * express \n     * @param {express.Application} app\n     * @param {express} express \n     * @param {object} mware \n     */\n    express(app, express, mware) {\n        this.submodules.forEach(m => m.express(app, express, mware));\n    }\n\n    /**\n     * restify \n     * @param {restify.Application} app \n     */\n    restify(app, plugins) {\n        this.submodules.forEach(m => m.restify(app, plugins));\n    }\n\n}\n\nexport default CompositeModule\n"]}