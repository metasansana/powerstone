{"version":3,"sources":["../../src/common/Module.js"],"names":[],"mappings":"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","file":"Module.js","sourcesContent":["import CompositeModule from './CompositeModule';\nimport FeatureFactory from '../routing/FeatureFactory';\nimport RestifyQ from '../routing/RestifyQ';\nimport ExpressQ from '../routing/ExpressQ';\nimport * as util from '../util';\nimport {\n    configs,\n    paths\n}\nfrom './properties';\n\n/**\n * Module\n * @param {string} fqn The name of the module prefixed with its parent modules \n * @param {string} path \n * @param {Configuration} config \n * @param {Loader} loader \n * @param {Application} app \n */\nclass Module {\n\n    constructor(fqn, path, config, loader, app) {\n\n        this.fqn = fqn;\n        this.path = path;\n        this.configuration = config;\n        this.loader = loader;\n        this.application = app;\n        this.submodules = new CompositeModule([]);\n\n    }\n\n    /**\n     * name provides the name of this module\n     *  @return {string}\n     */\n    name() {\n\n        return (this.fqn) ?\n            this.fqn.split('.').pop() : '';\n\n    }\n\n    /**\n     * modules loads all the submodules for this module into memory.\n     * @param {object} mods \n     */\n    modules(mods) {\n\n        var name;\n        var path;\n        var loader;\n        var config;\n        var fqn;\n        var m;\n\n        this.submodules = new CompositeModule(\n            this.configuration.readWithDefaults(paths.MODULES, []).map((path) => {\n\n                loader = this.application.getLoader(this.loader.join(paths.MODULES + '/' + path));\n                config = loader.getConfiguration();\n                name = loader.basename();\n                fqn = (this.fqn) ? `${this.fqn}.${name}` : name;\n                path = `${this.path}/${name}`;\n\n                m = new Module(fqn, path, config, loader, this.application);\n                mods[name] = m;\n                return m;\n\n            }));\n\n        this.submodules.modules(mods);\n\n    }\n\n    /**\n     * framework loads the files from the framework\n     * folder so that they are available in later steps\n     * @param {object} connectors\n     * @param {object} pipes \n     */\n    framework(connectors, pipes) {\n\n        this.loader.require(paths.CONNECTORS, connectors);\n        this.loader.require(paths.PIPES_DEFINES, pipes.defines);\n        this.loader.require(paths.PIPES_FILTERS, pipes.filters);\n        this.submodules.framework(connectors, pipes);\n\n    }\n\n    /**\n     * expressFramework loads the pieces for the express framework\n     * @param {object} middleware\n     * @param {object} engines \n     */\n    expressFramework(middleware, engines) {\n\n        this.loader.require(paths.WEB_PLUGINS, middleware);\n        this.loader.require(paths.WEB_ENGINES, engines);\n        this.submodules.expressFramework(middleware, engines);\n\n    }\n\n    /**\n     * restifyFramework loads the pieces for the restify framework\n     */\n    restifyFramework(plugins) {\n\n        this.loader.require(paths.API_PLUGINS, plugins);\n        this.submodules.restifyFramework(plugins);\n\n    }\n\n    /**\n     * connections opens the connections defined in the module's config file.\n     * @param {object} types A list of available connection types\n     * @param {object} conns Opened connections will be referenced here\n     * @return {array<Promise>}\n     */\n    connections(types, conns) {\n\n        var type;\n        var cfgs = this.configuration.readWithDefaults(configs.CONNECTIONS, {});\n        var cfg;\n\n        return Object.keys(cfgs)\n            .map(key => {\n\n                cfg = cfgs[key];\n                type = types[cfg.connector];\n\n                if (!type)\n                    throw new Error(`Unknown connector '${cfg.connector}' ` +\n                        `specified in ${this.configuration.path}`);\n\n                return new Promise((yes, no) => type(cfg.options, yes, no)).\n                then(con => conns[key] = con);\n\n            }).concat(this.submodules.connections(types, conns));\n\n    }\n\n    /**\n     * userland loads the userland code into memory\n     * @param {object} controllers \n     * @param {object} models\n     * @param {object} middleware \n     */\n    userland(controllers, models, middleware) {\n\n        var prefix = this.configuration.readWithDefaults('prefix', '');\n\n        var events = {};\n\n        this.loader.require('controllers', controllers, prefix);\n        this.loader.require('models', models, prefix);\n        this.loader.require('middleware', middleware, prefix);\n\n        Object.keys(this.loader.require('events', events)).\n        forEach(event => this.application.on(event, events[event]));\n\n        this.submodules.userland(controllers, models, middleware);\n\n    }\n\n    /**\n     * express configures the express framework\n     * @param {express.Application} app\n     * @param {express} express \n     * @param {array} mware Default middleware to apply if non specified\n     */\n    express(app, express, mware) {\n\n        var isMain = (this.name() === '');\n        var isApp = ((!this.configuration.read(configs.USE_WEB_ROUTER)) || isMain);\n        var target = (isApp) ? express() : express.Router();\n        var router;\n        var path = this.configuration.readWithDefaults(configs.PATH, `/${this.name()}`);\n        var engine = this.configuration.readWithDefaults(configs.WEB_ENGINE, null);\n        var engineSetup = this.application.framework.express.engines[engine];\n        var features\n        var routes;\n        var q;\n\n        this.application.interpolate(this.application.framework.express.middleware,\n            this.configuration.readWithDefaults(configs.WEB_PLUGINS, mware)).\n        forEach(m => m(target, this));\n\n        if (isMain)\n            this.application.emit(this.application.events.ROUTING, target, this);\n\n        if (isApp) {\n            if (engine && (!engineSetup)) {\n                throw new Error(`The view engine '${engine}' was not found!`);\n            } else if (engine) {\n\n                if (typeof engineSetup !== 'function')\n                    throw new Error(`Invalid configure script found for view engine '${engine}'!` +\n                        `The script must export a function, found typeof '${typeof engine}'.`);\n\n                engineSetup(target, this);\n\n            }\n        }\n\n        features = FeatureFactory.web(this.application);\n\n        routes = this.loader.load(paths.WEB_ROUTES, {\n            web: {}\n        });\n\n        Object.keys(routes).\n        forEach(function(path) {\n            q = new ExpressQ(path, target);\n            Object.keys(routes[path]).\n            forEach(method => features.install(method, path, routes[path][method], q));\n            q.flush();\n        });\n\n        if (isMain) {\n            app.use(target);\n        } else if (path) {\n            app.use(path, target);\n        }\n\n        this.submodules.express((isApp) ? target : app, express, (isApp) ? ['public'] : []);\n    }\n\n    /**\n     * restify\n     * @param {restify.Server} server\n     * @param {array} plugins \n     * @param {string} path \n     */\n    restify(server, plugins) {\n\n        var features;\n        var routes;\n        var q;\n         var path = this.configuration.readWithDefaults(configs.PATH, `/${this.name()}`);\n\n        this.application.interpolate(this.application.framework.restify.plugins,\n            this.configuration.readWithDefaults(configs.API_PLUGINS, plugins)).\n        forEach(p => p(server, this.application, this));\n\n        features = FeatureFactory.api(this.application);\n        routes = this.loader.load(paths.API_ROUTES, {\n            api: {}\n        });\n\n        Object.keys(routes).\n        forEach((route) => {\n            q = new RestifyQ(path + route, server);\n            Object.keys(routes[route]).\n            forEach(method =>\n                features.install(method, path + route, routes[route][method], q));\n            q.flush();\n        });\n\n        this.submodules.restify(server, []);\n\n    }\n}\n\nexport default Module\n"]}