{"version":3,"sources":["../../src/common/ModuleRegistry.js"],"names":[],"mappings":";;;;;;;;;;;;;IAGM,cAAc;AAEL,aAFT,cAAc,GAEF;8BAFZ,cAAc;;AAGZ,YAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AAClC,YAAI,CAAC,WAAW,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AACvC,YAAI,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AACnC,YAAI,CAAC,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AACtC,YAAI,CAAC,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;KACpC;;;;;;;;;iBARC,cAAc;;eAgBC,2BAAC,KAAK,EAAE;;;AAErB,mBAAO,KAAK,CAAC,GAAG,CAAC,UAAA,CAAC,EAAI;;AAElB,oBAAI,OAAO,CAAC,KAAK,UAAU,EAAE,OAAO,CAAC,CAAC;AACtC,oBAAI,CAAC,MAAK,UAAU,CAAC,CAAC,CAAC,EAAE,MAAM,IAAI,KAAK,4BAAyB,CAAC,gCAA4B,CAAC;AAC/F,uBAAO,MAAK,UAAU,CAAC,CAAC,CAAC,CAAC;aAE7B,CAAC,CAAC;SACN;;;;;;;eAKY,uBAAC,MAAM,EAAE,KAAK,EAAE;;AAEzB,gBAAI,UAAU,CAAC;AACf,gBAAI,MAAM,CAAC;;AAEX,gBAAI,OAAO,MAAM,KAAK,UAAU,EAAE,OAAO,MAAM,CAAC;AAChD,kBAAM,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AAC3B,sBAAU,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;AACzC,kBAAM,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;;AAEnB,gBAAI,CAAC,UAAU,EAAE,MAAM,IAAI,KAAK,4BAAyB,MAAM,CAAC,CAAC,CAAC,iCAA6B,CAAC;;AAEhG,mBAAO,UAAS,GAAG,EAAE,GAAG,EAAE;;AAEtB,oBAAI,CAAC,GAAG,IAAI,UAAU,CAAC,GAAG,EAAE,GAAG,EAAE,KAAK,CAAC,CAAC;AACxC,oBAAI,OAAO,CAAC,CAAC,MAAM,CAAC,KAAK,UAAU,EAAE;AACjC,uBAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACd,2BAAO,GAAG,CAAC,IAAI,EAAE,CAAC;iBACrB;AACD,iBAAC,CAAC,MAAM,CAAC,EAAE,CAAC;aACf,CAAC;SAEL;;;WApDC,cAAc;;;qBAwDL,IAAI,cAAc,EAAE","file":"ModuleRegistry.js","sourcesContent":["/**\n * ModuleRegistry\n */\nclass ModuleRegistry {\n\n    constructor() {\n        this.models = Object.create(null);\n        this.controllers = Object.create(null);\n        this.queries = Object.create(null);\n        this.middleware = Object.create(null);\n        this.pipes = Object.create(null);\n    }\n\n    /**\n     * convertMiddleware turns an array of strings\n     * into an array of executable middleware functions\n     * @param {array} wares \n     * @returns {array<string>}\n     */\n    convertMiddleware(wares) {\n\n        return wares.map(w => {\n\n            if (typeof w === 'function') return w;\n            if (!this.middleware[w]) throw new Error(`Unknown middleware: '${w}' declared in route file!`);\n            return this.middleware[w];\n\n        });\n    }\n\n    /**\n     * convertAction makes an executable of an action decleration\n     */\n    convertAction(action, route) {\n\n        var Controller;\n        var method;\n\n        if (typeof action === 'function') return action;\n        action = action.split('.');\n        Controller = this.controllers[action[0]];\n        method = action[1];\n\n        if (!Controller) throw new Error(`Unknown controller: '${action[0]}' decleared in route file!`);\n\n        return function(req, res) {\n\n            var i = new Controller(req, res, route);\n            if (typeof i[method] !== 'function') {\n                res.send(500);\n                return res.send();\n            }\n            i[method]();\n        };\n\n    }\n\n}\n\nexport default new ModuleRegistry();\n"]}