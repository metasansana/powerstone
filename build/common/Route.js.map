{"version":3,"sources":["../../src/common/Route.js"],"names":[],"mappings":"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","file":"Route.js","sourcesContent":["import expressJSONSchema from 'express-jsonschema';\nimport json_schema_error_handler from './json_schema_error_handler';\nimport ProjectRegistry from './ProjectRegistry';\nimport Pipe from 'pipes/build/Pipe';\n\nvar validate = expressJSONSchema.validate;\n\n/**\n * @param {string} method string\n * @param {path} string \n * @param {Framework} fw \n * @param {Configuration} config \n */\nclass Route {\n\n    constructor(method, path, fw, config) {\n        this.method = method;\n        this.path = path;\n        this.fw = fw;\n        this.config = config;\n    }\n\n    /**\n     * configureDefault \n     */\n    configureDefault(spec) {\n\n        if (typeof spec === 'string')\n            return this.configureAction(spec);\n\n        return this;\n\n    }\n\n    /**\n     * configureSchema sets up json-schema on the route.\n     * @param {object} schema \n     */\n    configureSchema(schema) {\n\n        if (!schema) return this;\n        this.fw[this.method](this.path, validate(schema));\n        this.fw.use(json_schema_error_handler);\n        return this;\n\n    }\n\n    /**\n     * configurePipes uses the pipes library to \n     * squeeze the request bodythrough a pipeline\n     * @param {object} pipe \n     * @param {string} target \n     */\n    configurePipes(pipe, target) {\n\n        if (!pipe) return this;\n        var p = new Pipe(pipe, ProjectRegistry.pipes);\n        this.fw[this.method](this.path, function(req, res, next) {\n\n            p.run(req[target], function(err, o) {\n                if (err) {\n                  res.status(400);\n                  return res.send();\n                }\n                req[target] = o;\n                next();\n            });\n\n        });\n        return this;\n    }\n\n    /**\n     * configureMiddleware sets up middleware on the route\n     * @param {array} wares \n     */\n    configureMiddleware(wares) {\n\n        if (!wares) return this;\n\n        ProjectRegistry.convertMiddleware(wares).\n        forEach(mwares =>\n            this.fw[this.method](this.path, (req, res, next) =>\n                mwares(req, res, next, this)));\n\n        return this;\n    }\n\n    /**\n     * configureAction sets up controllers on the route\n     * @param {string} action\n     */\n    configureAction(action) {\n        if (!action) return this;\n        this.fw[this.method](this.path, ProjectRegistry.convertAction(action));\n        return this;\n    }\n\n    configureView(view) {\n\n        if (!view) return this;\n\n        this.fw[this.method](this.path, function(req, res) {\n\n            res.render(route.view, locals);\n\n        });\n\n        return this;\n\n    }\n\n\n}\nexport default Route;\n"]}