{"version":3,"sources":["../../src/common/Routes.js"],"names":[],"mappings":";;;;;;;;;;;;;IAGM,MAAM;aAAN,MAAM;8BAAN,MAAM;;;iBAAN,MAAM;;;;;;;;eAOD,iBAAC,MAAM,EAAE;;AAEZ,gBAAI,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;;AAEvB,oBAAI,IAAI,GAAG,EAAE,CAAC;;AAEd,sBAAM,CAAC,OAAO,CAAC,UAAC,KAAK,EAAI;AACrB,wBAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE;AAC7B,4BAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,UAAC,KAAK;mCAAG,KAAK;yBAAA,CAAC,CAAC,CAAC;qBAC3D,MAAM;AACH,4BAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;qBACpB;iBACJ,CAAC,CAAC;;AAEH,uBAAO,IAAI,CAAC;aACf;;AAED,mBAAO,MAAM,CAAC,MAAM,CAAC;SAExB;;;eAEY,uBAAC,MAAM,EAAE;AAClB,mBAAO,AAAC,MAAM,GAAI,MAAM,CAAC,WAAW,EAAE,GAAG,KAAK,CAAA;SACjD;;;WA9BC,MAAM;;;qBAkCG,IAAI,MAAM,EAAE","file":"Routes.js","sourcesContent":["/**\n * Routes is a utility class for parsing routes.\n */\nclass Routes {\n\n    /**\n     * flatten turns a list of routes into a single array of routes.\n     * @param {Array|Object} routes\n     * @returns Array\n     */\n    flatten(routes) {\n\n        if (Array.isArray(routes)) {\n\n            var flat = [];\n\n            routes.forEach((route)=> {\n                if (Array.isArray(route.routes)) {\n                    flat.push.apply(flat, route.routes.map((entry)=>entry));\n                } else {\n                    flat.push(route);\n                }\n            });\n\n            return flat;\n        }\n\n        return routes.routes;\n\n    }\n\n    defaultMethod(method) {\n        return (method) ? method.toLowerCase() : 'get'\n    }\n\n}\n\nexport default new Routes()"]}