{"version":3,"sources":["../../src/common/Strings.js"],"names":[],"mappings":";;;;;;;;;;;;;;IAIM,OAAO;aAAP,OAAO;8BAAP,OAAO;;;iBAAP,OAAO;;;;;;;;;eAQqB,wCAAC,OAAO,EAAE,YAAY,EAAE;;AAElD,mBAAO,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CACrB,GAAG,CAAC,UAAU,GAAG,EAAE;;AAEf,oBAAI,IAAI,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;;AAE1B,oBAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EACtB,MAAM,IAAI,KAAK,CAAC,uDAAuD,GACnE,IAAI,CAAC,CAAC,CAAC,GAAG,iBAAiB,CAAC,CAAC;;AAErC,oBAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAC/B,MAAM,IAAI,KAAK,CAAC,2CAA2C,GACvD,IAAI,CAAC,CAAC,CAAC,GAAG,iBAAiB,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;;AAErD,uBAAO,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;aAGrE,CAAC,CAAC;SAEV;;;;;;;eAKc,yBAAC,OAAO,EAAE,UAAU,EAAE;;AAEjC,mBAAO,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,UAAU,GAAG,EAAE;AACzC,oBAAI,CAAC,UAAU,CAAC,cAAc,CAAC,GAAG,CAAC,EAC/B,MAAM,IAAI,KAAK,CAAC,yBAAyB,GAAG,GAAG,GAAG,iBAAiB,CAAC,CAAC;AACzE,uBAAO,UAAU,CAAC,GAAG,CAAC,CAAC;aAC1B,CAAC,CAAA;SACL;;;WAxCC,OAAO;;;qBA6CE,IAAI,OAAO,EAAE","file":"Strings.js","sourcesContent":["/**\n * Strings Convert arbitrary strings into useful objects.\n * @constructor\n */\nclass Strings {\n\n    /**\n     * methodListToBoundFunctionArray\n     * @param {String} strList\n     * @param {Object} mapOfObjects\n     * @param {Array}\n     */\n    methodListToBoundFunctionArray(strList, mapOfObjects) {\n\n        return strList.split(',').\n            map(function (def) {\n\n                var path = def.split('.');\n\n                if (!mapOfObjects[path[0]])\n                    throw new Error('Strings.methodListToBoundFunctionArray(): The object ' +\n                        path[0] + ' was not found!');\n\n                if (!mapOfObjects[path[0]][path[1]])\n                    throw new Error('Strings.methodListToBoundFunctionArray():' +\n                        path[0] + ' has no method ' + path[1] + '!');\n\n                return mapOfObjects[path[0]][path[1]].bind(mapOfObjects[path[0]]);\n\n\n            });\n\n    }\n\n    /**\n     * funcListToArray\n     */\n    funcListToArray(strList, mapOfFuncs) {\n\n        return strList.split(',').map(function (hit) {\n            if (!mapOfFuncs.hasOwnProperty(hit))\n                throw new Error('funcListToArray: Func: ' + hit + ' was not found!');\n            return mapOfFuncs[hit];\n        })\n    }\n\n\n}\n\nexport default new Strings()"]}