'use strict';

var Connection = require('./Connection');
var mongoose = require('mongoose');

function Mongoose() {

    Connection.apply(this, arguments);
    this.options.url = this.options.url || process.env.MONGO_URI || process.env.MONGO_URI;
}

Mongoose.prototype = Object.create(Connection.prototype);
Mongoose.prototype.constructor = Mongoose;
Mongoose.parent = Connection;

Mongoose.prototype.__open__ = function (resolve, reject) {

    this.connection = mongoose.createConnection(this.options.url, this.options);
    this.Schema = mongoose.Schema;

    this.connection.on('open', function (err) {
        if (err) return reject(err);
        resolve(this.connection);
    });

    this.connection.on('error', function (err) {
        throw err;
    });
};

Mongoose.prototype.__close__ = function (resolve, reject) {

    this.connection.close(resolve);
};

module.exports = Mongoose;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9jb25uZWN0aW9ucy9Nb25nb29zZS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLElBQUksVUFBVSxHQUFHLE9BQU8sQ0FBQyxjQUFjLENBQUMsQ0FBQztBQUN6QyxJQUFJLFFBQVEsR0FBRyxPQUFPLENBQUMsVUFBVSxDQUFDLENBQUM7O0FBRW5DLFNBQVMsUUFBUSxHQUFHOztBQUVoQixjQUFVLENBQUMsS0FBSyxDQUFDLElBQUksRUFBRSxTQUFTLENBQUMsQ0FBQztBQUNsQyxRQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsSUFDL0IsT0FBTyxDQUFDLEdBQUcsQ0FBQyxTQUFTLElBQ3JCLE9BQU8sQ0FBQyxHQUFHLENBQUMsU0FBUyxDQUFDO0NBRzdCOztBQUVELFFBQVEsQ0FBQyxTQUFTLEdBQUcsTUFBTSxDQUFDLE1BQU0sQ0FBQyxVQUFVLENBQUMsU0FBUyxDQUFDLENBQUM7QUFDekQsUUFBUSxDQUFDLFNBQVMsQ0FBQyxXQUFXLEdBQUcsUUFBUSxDQUFDO0FBQzFDLFFBQVEsQ0FBQyxNQUFNLEdBQUcsVUFBVSxDQUFDOztBQUU3QixRQUFRLENBQUMsU0FBUyxDQUFDLFFBQVEsR0FBRyxVQUFVLE9BQU8sRUFBRSxNQUFNLEVBQUU7O0FBRXJELFFBQUksQ0FBQyxVQUFVLEdBQUcsUUFBUSxDQUFDLGdCQUFnQixDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQztBQUM1RSxRQUFJLENBQUMsTUFBTSxHQUFHLFFBQVEsQ0FBQyxNQUFNLENBQUM7O0FBRTlCLFFBQUksQ0FBQyxVQUFVLENBQUMsRUFBRSxDQUFDLE1BQU0sRUFBRSxVQUFVLEdBQUcsRUFBRTtBQUN0QyxZQUFJLEdBQUcsRUFBRSxPQUFPLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQztBQUM1QixlQUFPLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDO0tBQzVCLENBQUMsQ0FBQzs7QUFFSCxRQUFJLENBQUMsVUFBVSxDQUFDLEVBQUUsQ0FBQyxPQUFPLEVBQUUsVUFBVSxHQUFHLEVBQUU7QUFDdkMsY0FBTSxHQUFHLENBQUE7S0FDWixDQUFDLENBQUM7Q0FHTixDQUFDOztBQUVGLFFBQVEsQ0FBQyxTQUFTLENBQUMsU0FBUyxHQUFHLFVBQVUsT0FBTyxFQUFFLE1BQU0sRUFBRTs7QUFFdEQsUUFBSSxDQUFDLFVBQVUsQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLENBQUM7Q0FFbEMsQ0FBQzs7QUFHRixNQUFNLENBQUMsT0FBTyxHQUFHLFFBQVEsQ0FBQyIsImZpbGUiOiJNb25nb29zZS5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBDb25uZWN0aW9uID0gcmVxdWlyZSgnLi9Db25uZWN0aW9uJyk7XG52YXIgbW9uZ29vc2UgPSByZXF1aXJlKCdtb25nb29zZScpO1xuXG5mdW5jdGlvbiBNb25nb29zZSgpIHtcblxuICAgIENvbm5lY3Rpb24uYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgICB0aGlzLm9wdGlvbnMudXJsID0gdGhpcy5vcHRpb25zLnVybCB8fFxuICAgICAgICBwcm9jZXNzLmVudi5NT05HT19VUkkgfHxcbiAgICAgICAgcHJvY2Vzcy5lbnYuTU9OR09fVVJJO1xuXG5cbn1cblxuTW9uZ29vc2UucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShDb25uZWN0aW9uLnByb3RvdHlwZSk7XG5Nb25nb29zZS5wcm90b3R5cGUuY29uc3RydWN0b3IgPSBNb25nb29zZTtcbk1vbmdvb3NlLnBhcmVudCA9IENvbm5lY3Rpb247XG5cbk1vbmdvb3NlLnByb3RvdHlwZS5fX29wZW5fXyA9IGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcblxuICAgIHRoaXMuY29ubmVjdGlvbiA9IG1vbmdvb3NlLmNyZWF0ZUNvbm5lY3Rpb24odGhpcy5vcHRpb25zLnVybCwgdGhpcy5vcHRpb25zKTtcbiAgICB0aGlzLlNjaGVtYSA9IG1vbmdvb3NlLlNjaGVtYTtcblxuICAgIHRoaXMuY29ubmVjdGlvbi5vbignb3BlbicsIGZ1bmN0aW9uIChlcnIpIHtcbiAgICAgICAgaWYgKGVycikgcmV0dXJuIHJlamVjdChlcnIpO1xuICAgICAgICByZXNvbHZlKHRoaXMuY29ubmVjdGlvbik7XG4gICAgfSk7XG5cbiAgICB0aGlzLmNvbm5lY3Rpb24ub24oJ2Vycm9yJywgZnVuY3Rpb24gKGVycikge1xuICAgICAgICB0aHJvdyBlcnJcbiAgICB9KTtcblxuXG59O1xuXG5Nb25nb29zZS5wcm90b3R5cGUuX19jbG9zZV9fID0gZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkge1xuXG4gICAgdGhpcy5jb25uZWN0aW9uLmNsb3NlKHJlc29sdmUpO1xuXG59O1xuXG5cbm1vZHVsZS5leHBvcnRzID0gTW9uZ29vc2U7Il19