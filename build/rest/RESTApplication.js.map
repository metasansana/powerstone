{"version":3,"sources":["../../src/rest/RESTApplication.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;wBAAoB,UAAU;;;;uBACV,SAAS;;;;6BACH,kBAAkB;;;;4BACpB,gBAAgB;;;;gCACX,qBAAqB;;;;6BACxB,kBAAkB;;;;uBACxB,WAAW;;;;uBACX,WAAW;;;;AAE/B,IAAM,eAAe,GAAC,EAAE,CAAC;;IAEnB,eAAe;cAAf,eAAe;;aAAf,eAAe;8BAAf,eAAe;;mCAAf,eAAe;;;iBAAf,eAAe;;eAEd,eAAG;;;AAEF,mBAAO,yBAAY,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAC3C,IAAI,CAAC,YAAK;;AAEN,oBAAI,MAAM,GAAG,2BAAc,gBAAgB,CAAC,MAAK,MAAM,CAAC,gBAAgB,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC,CAAC;AAC9F,oBAAI,MAAM,CAAC;AACX,oBAAI,MAAM,CAAC;AACX,oBAAI,QAAQ,GAAG,MAAK,QAAQ,CAAC,KAAK,EAAE,CAAC;AACrC,oBAAI,OAAO,CAAC;;AAEZ,wBAAQ,CAAC,OAAO,CAAC,MAAK,IAAI,CAAC,CAAC;;AAE5B,wBAAQ,CAAC,OAAO,CAAC,UAAC,OAAO,EAAI;;AAEzB,0BAAM,GAAG,OAAO,CAAC,gBAAgB,EAAE,CAAC;AACpC,0BAAM,GAAG,OAAO,CAAC,SAAS,EAAE,CAAC;AAC7B,2BAAO,GAAG,MAAM,CAAC,gBAAgB,CAAC,SAAS,EAAE,eAAe,CAAC,CAAC;AAC9D,2BAAO,CAAC,OAAO,CAAC,UAAA,MAAM;+BAAE,qBAAQ,GAAG,CAAC,MAAM,CAAC,CAAC,MAAM,EAAC,MAAM,EAAC,MAAM,EAAC,OAAO,CAAC;qBAAA,CAAC,CAAC;AAC3E,yCAAQ,SAAS,CAAC,MAAM,EAAE,MAAM,CAAC,YAAY,CAAC,QAAQ,EAAE,EAAE,CAAC,EAAE,MAAM,CAAC,CAAC;iBAExE,CAAC,CAAC;;AAEH,oBAAI,MAAM,GAAG,+BACT,MAAK,MAAM,CAAC,gBAAgB,CAAC,MAAM,EAAE,OAAO,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC,EAC9D,MAAK,MAAM,CAAC,gBAAgB,CAAC,MAAM,EAAE,OAAO,CAAC,GAAG,CAAC,IAAI,IAAI,SAAS,CAAC,EACnE,kCAAqB,MAAM,CAAC,CAAC,CAAC;;AAElC,uBAAO,MAAM,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,MAAK,aAAa,CAAC,CAAC;aAElD,CAAC,CAAC;SAEV;;;eAEO,oBAAG;;AAEP,gBAAI,IAAI,GAAG,IAAI,CAAC;;AAEhB,mBAAO,0BAAY,UAAU,OAAO,EAAE,MAAM,EAAE;;AAE1C,oBAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CACtB,IAAI,CAAC,YAAY;;AAEb,yBAAK,IAAI,GAAG,IAAI,IAAI,CAAC,SAAS,EAC1B,IAAI,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE;AACpC,4BAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,YAAY;AAClC,mCAAO,EAAE,CAAC;yBACb,CAAC,CAAA;qBACL;iBACJ,CAAC,SACD,CAAC,UAAU,GAAG,EAAE;AACjB,0BAAM,CAAC,GAAG,CAAC,CAAC;AACZ,2BAAO,GAAG,CAAC;iBACd,CAAC,CAAC;aACN,CAAC,CAAC;SAEN;;;WA1DK,eAAe;;;qBA6DN,eAAe","file":"RESTApplication.js","sourcesContent":["import Promise from 'bluebird';\nimport restify from 'restify';\nimport ServerFactory from '../ServerFactory';\nimport Application from '../Application';\nimport PowerstoneServer from '../PowerstoneServer';\nimport ManagedServer from '../ManagedServer';\nimport Routing from './Routing';\nimport Plugins from './Plugins';\n\nconst DEFAULT_PLUGINS=[];\n\nclass RESTApplication extends Application {\n\n    run() {\n\n        return Application.prototype.run.call(this).\n        then(()=> {\n\n            var server = ServerFactory.createRESTServer(this.config.readWithDefaults('https', undefined));\n            var config;\n            var loader;\n            var projects = this.projects.slice();\n            var plugins;\n\n            projects.unshift(this.main);\n\n            projects.forEach((project)=> {\n\n                config = project.getConfiguration();\n                loader = project.getLoader();\n                plugins = config.readWithDefaults('plugins', DEFAULT_PLUGINS);\n                plugins.forEach(plugin=>Plugins.get(plugin)(server,config,loader,project));\n                Routing.configure(server, loader.loadFromConf('routes', []), config);\n\n            });\n\n            var server = new ManagedServer(\n                this.config.readWithDefaults('port', process.env.PORT || 3000),\n                this.config.readWithDefaults('host', process.env.HOST || '0.0.0.0'),\n                new PowerstoneServer(server));\n\n            return server.start().then(this.serverStarted);\n\n        });\n\n}\n\nshutdown() {\n\n    var self = this;\n\n    return new Promise(function (resolve, reject) {\n\n        self.server.shutdown().\n        then(function () {\n\n            for (var key in self.databases)\n                if (self.databases.hasOwnProperty(key)) {\n                    self.databases[key].close(function () {\n                        resolve();\n                    })\n                }\n            }).\n        catch(function (err) {\n            reject(err);\n            return err;\n        });\n    });\n\n}\n}\n\nexport default RESTApplication\n"]}