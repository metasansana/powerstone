{"version":3,"sources":["../../src/rest/RestApplication.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;wBAAoB,UAAU;;;;uBACV,SAAS;;;;mCACH,yBAAyB;;;;iCAC3B,uBAAuB;;;;sCAClB,4BAA4B;;;;mCAC/B,yBAAyB;;;;4BAChC,kBAAkB;;;;uBACjB,WAAW;;;;AAE/B,IAAM,eAAe,GAAG,EAAE,CAAC;;IAErB,eAAe;cAAf,eAAe;;aAAf,eAAe;8BAAf,eAAe;;mCAAf,eAAe;;;iBAAf,eAAe;;eAEd,eAAG;;;AAEF,mBAAO,2BAJT,eAAe,qCAKb,IAAI,CAAC,YAAM;;AAEP,oBAAI,MAAM,GAAG,iCAAc,gBAAgB,CAAC,MAAK,MAAM,CAAC,gBAAgB,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC,CAAC;AAC9F,oBAAI,MAAM,CAAC;AACX,oBAAI,MAAM,CAAC;AACX,oBAAI,QAAQ,GAAG,MAAK,QAAQ,CAAC,KAAK,EAAE,CAAC;AACrC,oBAAI,OAAO,CAAC;AACZ,oBAAI,MAAM,CAAC;;AAEX,wBAAQ,CAAC,OAAO,CAAC,MAAK,IAAI,CAAC,CAAC;;AAE5B,wBAAQ,CAAC,OAAO,CAAC,UAAC,OAAO,EAAK;;AAE1B,0BAAM,GAAG,OAAO,CAAC,gBAAgB,EAAE,CAAC;AACpC,0BAAM,GAAG,OAAO,CAAC,SAAS,EAAE,CAAC;AAC7B,2BAAO,GAAG,MAAM,CAAC,gBAAgB,CAAC,SAAS,EAAE,eAAe,CAAC,CAAC;AAC9D,2BAAO,CAAC,OAAO,CAAC,UAAA,MAAM;+BAAI,qBAAQ,GAAG,CAAC,MAAM,CAAC,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,CAAC;qBAAA,CAAC,CAAC;AAChF,0BAAM,GAAG,8BAAW,MAAM,EAAE,MAAM,CAAC,CAAC;AACpC,0BAAM,CAAC,SAAS,CAAC,MAAM,CAAC,YAAY,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC,CAAC;iBAEvD,CAAC,CAAC;;AAEH,sBAAM,GAAG,qCACL,MAAK,MAAM,CAAC,gBAAgB,CAAC,MAAM,EAAE,OAAO,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC,EAC9D,MAAK,MAAM,CAAC,gBAAgB,CAAC,MAAM,EAAE,OAAO,CAAC,GAAG,CAAC,IAAI,IAAI,SAAS,CAAC,EACnE,wCAAqB,MAAM,CAAC,CAAC,CAAC;AAClC,uBAAO,MAAM,CAAC,KAAK,EAAE,CAAC;aAEzB,CAAC,CACF,IAAI,CAAC,UAAA,IAAI;uBAAI,MAAK,OAAO,CAAC,IAAI,CAAC,MAAK,MAAM,CAAC,OAAO,EAAE,IAAI,QAAO;aAAA,CAAC,SAC3D,CAAC,UAAA,GAAG;uBAAI,MAAK,OAAO,CAAC,IAAI,CAAC,MAAK,MAAM,CAAC,KAAK,EAAE,GAAG,QAAO;aAAA,CAAC,CAAC;SAEjE;;;eAEO,oBAAG;;AAEP,gBAAI,IAAI,GAAG,IAAI,CAAC;;AAEhB,mBAAO,0BAAY,UAAS,OAAO,EAAE,MAAM,EAAE;;AAEzC,oBAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CACtB,IAAI,CAAC,YAAW;;AAEZ,yBAAK,IAAI,GAAG,IAAI,IAAI,CAAC,SAAS,EAC1B,IAAI,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,GAAG,CAAC,EAClC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;iBAE9C,CAAC,SACG,CAAC,UAAS,GAAG,EAAE;AAChB,0BAAM,CAAC,GAAG,CAAC,CAAC;AACZ,2BAAO,GAAG,CAAC;iBACd,CAAC,CAAC;aACN,CAAC,CAAC;SAEN;;;WA3DC,eAAe;;;qBA8DN,eAAe","file":"RestApplication.js","sourcesContent":["import Promise from 'bluebird';\nimport restify from 'restify';\nimport ServerFactory from '../common/ServerFactory';\nimport Application from '../common/Application';\nimport PowerstoneServer from '../common/PowerstoneServer';\nimport ManagedServer from '../common/ManagedServer';\nimport Router from '../common/Router';\nimport Plugins from './Plugins';\n\nconst DEFAULT_PLUGINS = [];\n\nclass RestApplication extends Application {\n\n    run() {\n\n        return super.run().\n        then(() => {\n\n            var server = ServerFactory.createRestServer(this.config.readWithDefaults('https', undefined));\n            var config;\n            var loader;\n            var projects = this.projects.slice();\n            var plugins;\n            var router;\n\n            projects.unshift(this.main);\n\n            projects.forEach((project) => {\n\n                config = project.getConfiguration();\n                loader = project.getLoader();\n                plugins = config.readWithDefaults('plugins', DEFAULT_PLUGINS);\n                plugins.forEach(plugin => Plugins.get(plugin)(server, config, loader, project));\n                router = new Router(server, config);\n                router.configure(loader.loadFromConf('routes', []));\n\n            });\n\n            server = new ManagedServer(\n                this.config.readWithDefaults('port', process.env.PORT || 3000),\n                this.config.readWithDefaults('host', process.env.HOST || '0.0.0.0'),\n                new PowerstoneServer(server));\n            return server.start();\n\n        }).\n        then(port => this._events.emit(this.events.STARTED, port, this)).\n        catch(err => this._events.emit(this.events.ERROR, err, this));\n\n    }\n\n    shutdown() {\n\n        var self = this;\n\n        return new Promise(function(resolve, reject) {\n\n            self.server.shutdown().\n            then(function() {\n\n                for (var key in self.databases)\n                    if (self.databases.hasOwnProperty(key))\n                        self.databases[key].close(resolve);\n\n            }).\n            catch(function(err) {\n                reject(err);\n                return err;\n            });\n        });\n\n    }\n}\n\nexport default RestApplication\n"]}