{"version":3,"sources":["../../../src/tasks/test/Report_test.js"],"names":[],"mappings":";;;;sBAAmB,WAAW;;;;oBACb,MAAM;;;;AAEvB,IAAI,MAAM,CAAC;AACX,IAAI,QAAQ,CAAC;;AAEb,QAAQ,CAAC,QAAQ,EAAE,YAAW;;AAE1B,cAAU,CAAC,YAAU;;AAEjB,gBAAQ,GAAG;AACP,yBAAa,EAAE,uBAAU,MAAM,EAAE;AAC7B,oBAAI,CAAC,MAAM,GAAG,MAAM,CAAC;aACxB;SACJ,CAAC;;AAEF,cAAM,GAAG,wBAAW,QAAQ,CAAC,CAAC;KAEjC,CAAC,CAAC;;AAEH,MAAE,CAAC,iBAAiB,EAAE,YAAW;;AAE7B,cAAM,CAAC,WAAW,CAAC,cAAc,EAAE,uBAAuB,CAAC,CAAC;AAC5D,cAAM,CAAC,aAAa,CAAC,yBAAyB,CAAC,CAAC;;AAEhD,+BAAK,QAAQ,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AAC3C,+BAAK,QAAQ,CAAC,MAAM,CAAC,uBAAuB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACpD,+BAAK,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,cAAc,CAAC,CAAC;AAChD,+BAAK,QAAQ,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC;AAChD,+BAAK,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC;AAC9C,+BAAK,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC;AAC7C,+BAAK,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;AACxC,+BAAK,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,yBAAyB,CAAC,CAAC;KAE/D,CAAC,CAAC;;AAGH,MAAE,CAAC,0BAA0B,EAAE,UAAS,IAAI,EAAE;;AAE1C,cAAM,CAAC,WAAW,CAAC,cAAc,EAAE,uBAAuB,CAAC,CAAC;AAC5D,cAAM,CAAC,sBAAsB,CAAC,IAAI,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC;AACxD,+BAAK,QAAQ,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AAC3C,+BAAK,QAAQ,CAAC,MAAM,CAAC,uBAAuB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACpD,+BAAK,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,cAAc,CAAC,CAAC;AAChD,+BAAK,QAAQ,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC;AAChD,+BAAK,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC;AAC9C,+BAAK,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC;AAC7C,+BAAK,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC;AACzC,+BAAK,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,aAAa,CAAC,CAAC;AAChD,YAAI,EAAE,CAAC;KAGV,CAAC,CAAC;CAGN,CAAC,CAAC","file":"Report_test.js","sourcesContent":["import Report from '../Report';\nimport must from 'must';\n\nvar report;\nvar recorder;\n\ndescribe('Report', function() {\n\n    beforeEach(function(){\n\n        recorder = {\n            taskCompleted: function (report) {\n                this.report = report;\n            }\n        };\n\n        report = new Report(recorder);\n\n    });\n\n    it('taskCompleted()', function() {\n\n        report.taskStarted('testingTask1', 'The test has started!');\n        report.taskCompleted('The task has completed!');\n\n        must(recorder.report.timesCompleted).be(1);\n        must(recorder.report.timesCompletedWithError).be(0);\n        must(recorder.report.taskID).be('testingTask1');\n        must(recorder.report.timeStarted).be.an.array();\n        must(recorder.report.timeEnded).be.an.array();\n        must(recorder.report.duration).be.an.array();\n        must(recorder.report.status).be('GOOD');\n        must(recorder.report.message).be('The task has completed!');\n\n    });\n\n\n    it('taskCompletedWithError()', function(done) {\n\n        report.taskStarted('testingTask2', 'The test has started!');\n        report.taskCompletedWithError(new Error('Phony Error'));\n        must(recorder.report.timesCompleted).be(0);\n        must(recorder.report.timesCompletedWithError).be(1);\n        must(recorder.report.taskID).be('testingTask2');\n        must(recorder.report.timeStarted).be.an.array();\n        must(recorder.report.timeEnded).be.an.array();\n        must(recorder.report.duration).be.an.array();\n        must(recorder.report.status).be('ERROR');\n        must(recorder.report.message).be('Phony Error');\n        done();\n\n\n    });\n\n\n});\n"]}