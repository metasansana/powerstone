{"version":3,"sources":["../../../src/tasks/test/Runner_test.js"],"names":[],"mappings":";;;;sBAAmB,WAAW;;;;oBACb,MAAM;;;;AAGvB,IAAI,MAAM,CAAC;AACX,IAAI,KAAK,CAAC;AACV,IAAI,QAAQ,CAAC;;AAEb,SAAS,gBAAgB,GAAG;AACxB,WAAO;AACH,aAAK,EAAE,CAAC;AACR,mBAAW,EAAE,qBAAS,GAAG,EAAE,EAAE,EAAC;AAC1B,eAAG,EAAE,CAAC;SACT;AACD,WAAG,EAAE,aAAS,CAAC,EAAE,IAAI,EAAC;AAClB,gBAAI,CAAC,KAAK,EAAE,CAAC;AACb,gBAAI,EAAE,CAAC;SACV;KACJ,CAAA;CACJ;;AAED,SAAS,kBAAkB,GAAG;AAC1B,WAAO;AACH,aAAK,EAAE,CAAC;AACR,mBAAW,EAAE,qBAAS,GAAG,EAAE,EAAE,EAAC;AAC1B,cAAE,EAAE,CAAC;SACR;AACD,WAAG,EAAE,aAAS,IAAI,EAAC;AACf,gBAAI,CAAC,KAAK,EAAE,CAAC;AACb,gBAAI,EAAE,CAAC;SACV;KACJ,CAAA;CACJ;;AAED,QAAQ,CAAC,QAAQ,EAAE,YAAW;;AAE1B,cAAU,CAAC,YAAU,EAEpB,CAAC,CAAC;;AAEH,MAAE,CAAC,mCAAmC,EAAE,YAAW;AAC/C,YAAI,UAAU,GAAG,gBAAgB,EAAE,CAAC;AACpC,YAAI,WAAW,GAAG,kBAAkB,EAAE,CAAC;AACvC,aAAK,GAAG,CACJ,gBAAgB,EAAE,EAClB,WAAW,EACX,WAAW,EACX,kBAAkB,EAAE,EACpB,UAAU,EACV,UAAU,EACV,gBAAgB,EAAE,CAAC,CAAC;;AAExB,cAAM,GAAG,wBAAW,KAAK,EAAE,EAAC,aAAa,EAAE,yBAAU,EAAE,EAAC,CAAC,CAAC;AAC1D,eAAO,MAAM,CAAC,WAAW,EAAE,CACvB,IAAI,CAAC,YAAU;AACX,mCAAK,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AAC3B,mCAAK,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AAC3B,mCAAK,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AAC3B,mCAAK,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AAC3B,mCAAK,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AAC3B,mCAAK,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AAC3B,mCAAK,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;SAC9B,CAAC,CAAC;KACV,CAAC,CAAA;CAEL,CAAC,CAAC","file":"Runner_test.js","sourcesContent":["import Runner from '../Runner';\nimport must from 'must';\n\n\nvar runner;\nvar tasks;\nvar recorder;\n\nfunction makeRunnableTask() {\n    return {\n        count: 0,\n        taskWillRun: function(yes, no){\n            yes();\n        },\n        run: function(_, done){\n            this.count++;\n            done();\n        }\n    }\n}\n\nfunction makeUnRunnableTask() {\n    return {\n        count: 0,\n        taskWillRun: function(yes, no){\n            no();\n        },\n        run: function(done){\n            this.count++;\n            done();\n        }\n    }\n}\n\ndescribe('Runner', function() {\n\n    beforeEach(function(){\n\n    });\n\n    it('will run tasks that should be run', function() {\n        var repeatTask = makeRunnableTask();\n        var repeatTask2 = makeUnRunnableTask();\n        tasks = [\n            makeRunnableTask(),\n            repeatTask2,\n            repeatTask2,\n            makeUnRunnableTask(),\n            repeatTask,\n            repeatTask,\n            makeRunnableTask()];\n\n        runner = new Runner(tasks, {taskCompleted: function(){}});\n        return runner.runAllTasks().\n            then(function(){\n                must(tasks[0].count).be(1);\n                must(tasks[1].count).be(0);\n                must(tasks[2].count).be(0);\n                must(tasks[3].count).be(0);\n                must(tasks[4].count).be(2);\n                must(tasks[5].count).be(2);\n                must(tasks[6].count).be(1);\n            });\n    })\n\n});"]}