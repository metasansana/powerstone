{"version":3,"sources":["../../src/web/WebMiddleWareRegistry.js"],"names":[],"mappings":";;;;;;;;sBAAmB,QAAQ;;;;uBACP,SAAS;;;;8BACF,iBAAiB;;;;sBACxB,QAAQ;;;;0BACL,aAAa;;;;4BACX,eAAe;;;;8BACpB,iBAAiB;;;;qBACpB,OAAO;;;;+BACA,qBAAqB;;;;AAE7C,IAAI,MAAM,GAAG,oBAAO,WAAW,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;;AAEpD,IAAI,aAAa,GAAG,SAAhB,aAAa,CAAa,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE;;AAE1C,OAAG,CAAC,GAAG,CAAC,cAAc,EAAE,GAAG,CAAC,SAAS,EAAE,CAAC,CAAC;AACzC,OAAG,CAAC,MAAM,CAAC,cAAc,EAAE,GAAG,CAAC,SAAS,EAAE,CAAC,CAAC;AAC5C,OAAG,CAAC,MAAM,CAAC,KAAK,GAAG,GAAG,CAAC,SAAS,EAAE,CAAC;AACnC,QAAI,EAAE,CAAC;CACV,CAAC;;;;;AAKF,IAAI,qBAAqB,GAAG;;AAExB,cAAU,EAAE,EAAE;;AAEd,OAAG,EAAA,aAAC,IAAI,EAAE,QAAQ,EAAE;AAChB,YAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,QAAQ,CAAC;AACjC,eAAO,IAAI,CAAC;KACf;;AAED,OAAG,EAAA,aAAC,IAAI,EAAE;AACN,YAAI,CAAC,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,IAAI,CAAC,EACrC,MAAM,IAAI,KAAK,CAAC,0BAA0B,GAAG,IAAI,GAAG,IAAI,CAAC,CAAC;AAC9D,eAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;KAChC;;CAEJ,CAAC;;AAEF,qBAAqB,CAAC,GAAG,CAAC,QAAQ,EAAE,SAAS,QAAQ,CAAC,KAAK,EAAE,GAAG,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE;AACvF,UAAM,CAAC,gBAAgB,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC,CAAC,CACzC,OAAO,CAAC,UAAA,IAAI;eAAE,GAAG,CAAC,GAAG,CAAC,8BAAc,CAAC,MAAM,CAAC,OAAO,EAAE,GAAG,GAAG,GAAG,IAAI,CAAC,CAAC;KAAA,CAAC,CAAC;CAC7E,CAAC,CAAC;;AAEH,qBAAqB,CAAC,GAAG,CAAC,iBAAiB,EAAE,SAAS,gBAAgB,CAAC,KAAK,EAAE,GAAG,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE;AACxG,OAAG,CAAC,GAAG,CAAC,KAAK,EAAE,kCAAgB,CAAC,CAAC;CACpC,CAAC,CAAC;;AAEH,qBAAqB,CAAC,GAAG,CAAC,QAAQ,EAAE,SAAS,QAAQ,CAAC,KAAK,EAAE,GAAG,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE;;AAEvF,QAAI,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,KAAK,EAAE,OAAO;;AAE5C,OAAG,CAAC,GAAG,CAAC,KAAK,EAAE,yBAAO,MAAM,CAAC,gBAAgB,CAAC,eAAe,EACzD,OAAO,CAAC,GAAG,CAAC,UAAU,IAAI,KAAK,EAAE,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC;CACzE,CAAC,CAAC;;AAEH,qBAAqB,CAAC,GAAG,CAAC,aAAa,EAAE,SAAS,YAAY,CAAC,KAAK,EAAE,GAAG,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE;AAChG,OAAG,CAAC,GAAG,CAAC,KAAK,EAAE,wBAAW,IAAI,EAAE,CAAC,CAAC;AAClC,OAAG,CAAC,GAAG,CAAC,KAAK,EAAE,wBAAW,UAAU,CAAC,EAAC,QAAQ,EAAE,IAAI,EAAC,CAAC,CAAC,CAAC;CAE3D,CAAC,CAAC;;AAEH,qBAAqB,CAAC,GAAG,CAAC,eAAe,EAAE,SAAS,cAAc,CAAC,KAAK,EAAE,GAAG,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE;AACpG,OAAG,CAAC,GAAG,CAAC,KAAK,EAAE,+BAAa,MAAM,CAAC,gBAAgB,CAAC,QAAQ,EACxD,OAAO,CAAC,GAAG,CAAC,MAAM,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC;CAEvC,CAAC,CAAC;;AAEH,qBAAqB,CAAC,GAAG,CAAC,SAAS,EAAE,SAAS,SAAS,CAAC,KAAK,EAAE,GAAG,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE;;AAEzF,QAAI,aAAa,GAAG,MAAM,CAAC,YAAY,CAAC,SAAS,EAAE;AAC/C,YAAI,EAAE,cAAc;AACpB,cAAM,EAAE,MAAM,CAAC,gBAAgB,CAAC,QAAQ,EACpC,OAAO,CAAC,GAAG,CAAC,MAAM,IAAI,MAAM,CAAC;AACjC,cAAM,EAAE,KAAK;AACb,yBAAiB,EAAE,IAAI;KAC1B,EAAE,EAAE,CAAC,CAAC;;AAEP,QAAI,6BAAY,aAAa,CAAC,SAAS,CAAC,EACpC,aAAa,CAAC,KAAK,GAAG,6BAAY,aAAa,CAAC,SAAS,CAAC,CAAC,MAAM,EAAE,CAAC;;AAExE,OAAG,CAAC,GAAG,CAAC,KAAK,EAAE,iCAAQ,aAAa,CAAC,CAAC,CAAC;CAE1C,CAAC,CAAC;;AAEH,qBAAqB,CAAC,GAAG,CAAC,MAAM,EAAE,SAAS,MAAM,CAAC,KAAK,EAAE,GAAG,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE;;AAEnF,QAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;AACrB,WAAG,CAAC,GAAG,CAAC,KAAK,EAAE,yBAAM,CAAC,CAAC;AACvB,WAAG,CAAC,GAAG,CAAC,KAAK,EAAE,aAAa,CAAC,CAAC;KACjC;CAEJ,CAAC,CAAC;;qBAEY,qBAAqB","file":"WebMiddleWareRegistry.js","sourcesContent":["import crypto from 'crypto';\nimport express from 'express';\nimport methodOverride from 'method-override';\nimport morgan  from 'morgan';\nimport bodyParser from 'body-parser';\nimport cookieParser from 'cookie-parser';\nimport session from 'express-session';\nimport csrf from 'csurf';\nimport Connections from '../conn/Connections';\n\nvar secret = crypto.randomBytes(32).toString('hex');\n\nvar sendCSRFToken = function (req, res, next) {\n\n    res.set('x-csrf-token', req.csrfToken());\n    res.cookie('x-csrf-token', req.csrfToken());\n    res.locals._csrf = req.csrfToken();\n    next();\n};\n\n/**\n * WebMiddleWareRegistry\n */\nvar WebMiddleWareRegistry = {\n\n    middleware: {},\n\n    set(name, provider) {\n        this.middleware[name] = provider;\n        return this;\n    },\n\n    get(name) {\n        if (!this.middleware.hasOwnProperty(name))\n            throw new Error('Unknown web middleware \"' + name + '\"!');\n        return this.middleware[name];\n    }\n\n};\n\nWebMiddleWareRegistry.set('public', function _public_(mount, app, config, loader, project) {\n    config.readWithDefaults('public', ['public']).\n        forEach(path=>app.use(express.static(loader.getPath() + '/' + path)));\n});\n\nWebMiddleWareRegistry.set('method-override', function _methodOverride_(mount, app, config, loader, project) {\n    app.use(mount, methodOverride());\n});\n\nWebMiddleWareRegistry.set('morgan', function _morgan_(mount, app, config, loader, project) {\n\n    if (config.read('morgan') === false) return;\n\n    app.use(mount, morgan(config.readWithDefaults('morgan.format',\n        process.env.LOG_FORMAT || 'dev', config.read('morgan.options'))));\n});\n\nWebMiddleWareRegistry.set('body-parser', function _bodyParser_(mount, app, config, loader, project) {\n    app.use(mount, bodyParser.json());\n    app.use(mount, bodyParser.urlencoded({extended: true}));\n\n});\n\nWebMiddleWareRegistry.set('cookie-parser', function _cookieParser_(mount, app, config, loader, project) {\n    app.use(mount, cookieParser(config.readWithDefaults('secret',\n        process.env.SECRET || secret)));\n\n});\n\nWebMiddleWareRegistry.set('session', function _session_(mount, app, config, loader, project) {\n\n    var sessionConfig = config.readAndMerge('session', {\n        name: 'PHPSESSIONID',\n        secret: config.readWithDefaults('secret',\n            process.env.SECRET || secret),\n        resave: false,\n        saveUninitialized: true\n    }, {});\n\n    if (Connections.hasConnection('session'))\n        sessionConfig.store = Connections.getConnection('session').getRaw();\n\n    app.use(mount, session(sessionConfig));\n\n});\n\nWebMiddleWareRegistry.set('csrf', function _csrf_(mount, app, config, loader, project) {\n\n    if (config.read('csrf')) {\n        app.use(mount, csrf());\n        app.use(mount, sendCSRFToken);\n    }\n\n});\n\nexport default WebMiddleWareRegistry"]}