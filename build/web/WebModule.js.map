{"version":3,"sources":["../../src/web/WebModule.js"],"names":[],"mappings":"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","file":"WebModule.js","sourcesContent":["import Loader from './Loader';\nimport CompositeModule from './CompositeModule';\nimport FeatureFactory from '../routing/FeatureFactory';\nimport RestifyQ from '../routing/RestifyQ';\nimport ExpressQ from '../routing/ExpressQ';\nimport {\n    configs, paths\n}\nfrom './properties';\n\n/**\n * Module\n * @param {string} name   \n * @param {string} path \n * @param {Configuration} config \n * @param {Loader} loader \n * @param {Application} app \n */\nclass Module {\n\n    constructor(name, path, config, loader, app) {\n        this.name = name;\n        this.path = path;\n        this.configuration = config;\n        this.loader = loader;\n        this.application = app;\n        this.submodules = new CompositeModule([]);\n    }\n\n    /**\n     * modules loads all the submodules for this module into memory.\n     * @param {object} mods \n     * @param {string} mode \n     */\n    modules(mods, mode) {\n\n        var name;\n        var path;\n        var loader;\n        var config;\n        var m;\n\n        this.submodules = new CompositeModule(\n            this.configuration.readWithDefaults(paths.MODULES, []).map((path) => {\n\n                loader = new Loader(this.loader.join(paths.MODULES + '/' + path));\n                config = loader.getConfiguration();\n                name = loader.basename();\n                path = `${this.path}/${name}`;\n\n                m = new Module(name, path, config, loader, this.application);\n                mods[name] = m;\n                return m;\n\n            }));\n\n        return this.submodules.modules(mods);\n    }\n\n    /**\n     * framework loads the files from the framework\n     * folder so that they are available in later steps\n     * @param {object} connectors\n     * @param {object} pipes \n     */\n    framework(connectors, pipes) {\n\n        this.loader.require(paths.CONNECTORS, connectors);\n        this.loader.require(paths.PIPES, pipes);\n        this.submodules.framework(connectors, pipes);\n\n    }\n\n    /**\n     * expressFramework loads the pieces for the express framework\n     * @param {object} middleware\n     * @param {object} engines \n     */\n    expressFramework(middleware, engines) {\n\n        this.loader.require(paths.WEB_PLUGINS, middleware);\n        this.loader.require(paths.WEB_ENGINES, engines);\n        this.submodules.expressFramework(middleware, engines);\n\n    }\n\n    /**\n     * restifyFramework loads the pieces for the restify framework\n     */\n    restifyFramework(plugins) {\n        this.loader.require(paths.API_PLUGINS, plugins);\n        this.submodules.restifyFramework(plugins);\n    }\n\n    /**\n     * connections opens the connections defined in the module's config file.\n     * @param {object} types A list of available connection types\n     * @param {object} conns Opened connections will be referenced here\n     * @return {array<Promise>}\n     */\n    connections(types, conns) {\n\n        var type;\n        var cfgs = this.configuration.readWithDefaults(configs.CONNECTIONS, {});\n        var cfg;\n\n        return Object.keys(cfgs)\n            .map(key => {\n                cfg = cfgs[key];\n                type = types[cfg.connector];\n                if (!type)\n                    throw new Error(`Unknown connection type '${cfg.type}' ` +\n                        `in ${this.loader.join('config.js')}`);\n\n                return new Promise((yes, no) => type(cfg.options, yes, no)).\n                then(con => conns[key] = con);\n\n            }).concat(this.submodules.connections(types, conns));\n\n    }\n\n    /**\n     * userland loads the userland code into memory\n     * @param {object} controllers \n     * @param {object} models\n     * @param {object} middleware \n     */\n    userland(controllers, models, middleware) {\n        this.loader.require('controllers', controllers, (this.name === 'main') ? '' : this.name);\n        this.loader.require('models', models, (this.name === 'main') ? '' : this.name);\n        this.loader.require('middleware', middleware, (this.name === 'main') ? '' : this.name);\n    }\n\n    /**\n     * express configures the express framework\n     * @param {express.Application} app\n     * @param {express} express \n     * @param {array} mware Default middleware to apply if non specified\n     */\n    express(app, express, mware) {\n\n        var isApp = ((!this.configuration.read(configs.USE_WEB_ROUTER)) || this.name === 'main');\n        var target = (isApp) ? express() : express.Router();\n        var router;\n        var path = this.configuration.readWithDefaults(configs.PATH, `/${this.name}`);\n        var engine = this.configuration.readWithDefaults(configs.WEB_ENGINE, null);\n        var engineSetup = this.application.framework.express.engines[engine];\n        var features\n        var routes;\n        var q;\n\n        this.application.interpolate(this.application.framework.express.middleware,\n            this.configuration.readWithDefaults(configs.WEB_PLUGINS, mware)).\n        forEach(m => m(target, this));\n\n        if (isApp) {\n            if (engine && (!engineSetup)) {\n                throw new Error(`The view engine '${engine}' was not found!`);\n            } else if (engine) {\n\n                if (typeof engineSetup !== 'function')\n                    throw new Error(`Invalid configure script found for view engine '${engine}'!` +\n                        `The script must export a function, found typeof '${typeof engine}'.`);\n\n                engineSetup(target, this);\n\n            }\n        }\n\n        features = FeatureFactory.web(this.application);\n        routes = this.loader.load(paths.WEB_ROUTES, {\n            web: {}\n        }).web;\n\n        Object.keys(routes).\n        forEach(function(path) {\n            q = new ExpressQ(path, target);\n            Object.keys(routes[path]).\n            forEach(method => features.install(method, path, routes[path][method], q));\n            q.flush();\n        });\n\n        if (this.name === 'main') {\n            app.use(target);\n        } else if (path) {\n            app.use(path, target);\n        }\n\n        this.submodules.express((isApp) ? target : app, express, (isApp) ? ['public'] : []);\n\n    }\n\n    /**\n     * restify\n     * @param {restify.Server} server\n     * @param {array} plugins \n     */\n    restify(server, plugins) {\n\n        var features;\n        var routes;\n        var q;\n\n        this.application.interpolate(this.application.framework.restify.plugins,\n            this.configuration.readWithDefaults(API_PLUGINS, plugins)).\n        forEach(p => p(server, this.application, this));\n\n        features = FeatureFactory.api(this.application);\n        routes = this.loader.load(API_ROUTES, {\n            api: {}\n        }).api;\n\n        Object.keys(routes).\n        forEach(function(path) {\n            q = new RestifyQ(path, server);\n            Object.keys(routes[path]).\n            forEach(method => features.install(method, path, routes[path][method], q));\n            q.flush();\n        });\n\n        this.submodules.restify(server, []);\n\n    }\n}\n\nexport default Module\n"]}