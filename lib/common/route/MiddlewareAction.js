import PowerError from '../PowerError';

class UnknownMiddlewareError extends PowerError {
    constructor(ware) {
        super(`Unable to locate middleware specified as ${ ware }!`);
        Error.captureStackTrace(this, this.constructor);
    }
}

/**
 * MiddlewareAction configures middleware specified by the 'middlewares'
 * key in a route declaration.
 * @implements {Action}
 */
class MiddlewareAction {

    constructor(resources) {

        this._resources = resources;
    }

    generate(method, path, route) {

        if (Array.isArray(route.middleware)) return route.middleware.map(middleware => {

            if (typeof middleware === 'function') return middleware;

            var module = this._resources.find(middleware);

            if (!module) throw new UnknownMiddlewareError(middleware);

            return module;
        });
    }
}

export default MiddlewareAction;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb21tb24vcm91dGUvTWlkZGxld2FyZUFjdGlvbi5qcyJdLCJuYW1lcyI6WyJQb3dlckVycm9yIiwiVW5rbm93bk1pZGRsZXdhcmVFcnJvciIsImNvbnN0cnVjdG9yIiwid2FyZSIsIkVycm9yIiwiY2FwdHVyZVN0YWNrVHJhY2UiLCJNaWRkbGV3YXJlQWN0aW9uIiwicmVzb3VyY2VzIiwiX3Jlc291cmNlcyIsImdlbmVyYXRlIiwibWV0aG9kIiwicGF0aCIsInJvdXRlIiwiQXJyYXkiLCJpc0FycmF5IiwibWlkZGxld2FyZSIsIm1hcCIsIm1vZHVsZSIsImZpbmQiXSwibWFwcGluZ3MiOiJBQUFBLE9BQU9BLFVBQVAsTUFBdUIsZUFBdkI7O0FBRUEsTUFBTUMsc0JBQU4sU0FBcUNELFVBQXJDLENBQWdEO0FBQzVDRSxnQkFBWUMsSUFBWixFQUFrQjtBQUNkLGNBQU8sNkNBQTJDQSxJQUFLLElBQXZEO0FBQ0FDLGNBQU1DLGlCQUFOLENBQXdCLElBQXhCLEVBQThCLEtBQUtILFdBQW5DO0FBQ0g7QUFKMkM7O0FBT2hEOzs7OztBQUtBLE1BQU1JLGdCQUFOLENBQXVCOztBQUVuQkosZ0JBQVlLLFNBQVosRUFBdUI7O0FBRW5CLGFBQUtDLFVBQUwsR0FBa0JELFNBQWxCO0FBRUg7O0FBRURFLGFBQVNDLE1BQVQsRUFBaUJDLElBQWpCLEVBQXVCQyxLQUF2QixFQUE4Qjs7QUFFMUIsWUFBSUMsTUFBTUMsT0FBTixDQUFjRixNQUFNRyxVQUFwQixDQUFKLEVBQ0ksT0FBT0gsTUFBTUcsVUFBTixDQUFpQkMsR0FBakIsQ0FBcUJELGNBQWM7O0FBRXRDLGdCQUFJLE9BQU9BLFVBQVAsS0FBc0IsVUFBMUIsRUFDSSxPQUFPQSxVQUFQOztBQUVKLGdCQUFJRSxTQUFTLEtBQUtULFVBQUwsQ0FBZ0JVLElBQWhCLENBQXFCSCxVQUFyQixDQUFiOztBQUVBLGdCQUFJLENBQUNFLE1BQUwsRUFDSSxNQUFNLElBQUloQixzQkFBSixDQUEyQmMsVUFBM0IsQ0FBTjs7QUFFSixtQkFBT0UsTUFBUDtBQUVILFNBWk0sQ0FBUDtBQWNQO0FBekJrQjs7QUE0QnZCLGVBQWVYLGdCQUFmIiwiZmlsZSI6Ik1pZGRsZXdhcmVBY3Rpb24uanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUG93ZXJFcnJvciBmcm9tICcuLi9Qb3dlckVycm9yJztcblxuY2xhc3MgVW5rbm93bk1pZGRsZXdhcmVFcnJvciBleHRlbmRzIFBvd2VyRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKHdhcmUpIHtcbiAgICAgICAgc3VwZXIoYFVuYWJsZSB0byBsb2NhdGUgbWlkZGxld2FyZSBzcGVjaWZpZWQgYXMgJHt3YXJlfSFgKTtcbiAgICAgICAgRXJyb3IuY2FwdHVyZVN0YWNrVHJhY2UodGhpcywgdGhpcy5jb25zdHJ1Y3Rvcik7XG4gICAgfVxufVxuXG4vKipcbiAqIE1pZGRsZXdhcmVBY3Rpb24gY29uZmlndXJlcyBtaWRkbGV3YXJlIHNwZWNpZmllZCBieSB0aGUgJ21pZGRsZXdhcmVzJ1xuICoga2V5IGluIGEgcm91dGUgZGVjbGFyYXRpb24uXG4gKiBAaW1wbGVtZW50cyB7QWN0aW9ufVxuICovXG5jbGFzcyBNaWRkbGV3YXJlQWN0aW9uIHtcblxuICAgIGNvbnN0cnVjdG9yKHJlc291cmNlcykge1xuXG4gICAgICAgIHRoaXMuX3Jlc291cmNlcyA9IHJlc291cmNlcztcblxuICAgIH1cblxuICAgIGdlbmVyYXRlKG1ldGhvZCwgcGF0aCwgcm91dGUpIHtcblxuICAgICAgICBpZiAoQXJyYXkuaXNBcnJheShyb3V0ZS5taWRkbGV3YXJlKSlcbiAgICAgICAgICAgIHJldHVybiByb3V0ZS5taWRkbGV3YXJlLm1hcChtaWRkbGV3YXJlID0+IHtcblxuICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgbWlkZGxld2FyZSA9PT0gJ2Z1bmN0aW9uJylcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG1pZGRsZXdhcmU7XG5cbiAgICAgICAgICAgICAgICB2YXIgbW9kdWxlID0gdGhpcy5fcmVzb3VyY2VzLmZpbmQobWlkZGxld2FyZSk7XG5cbiAgICAgICAgICAgICAgICBpZiAoIW1vZHVsZSlcbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IFVua25vd25NaWRkbGV3YXJlRXJyb3IobWlkZGxld2FyZSk7XG5cbiAgICAgICAgICAgICAgICByZXR1cm4gbW9kdWxlO1xuXG4gICAgICAgICAgICB9KTtcblxuICAgIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgTWlkZGxld2FyZUFjdGlvblxuIl19