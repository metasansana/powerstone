{"version":3,"sources":["../../src/api/ApiModule.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;mCAA0B,yBAAyB;;;;4BAChC,kBAAkB;;;;0BACnB,gBAAgB;;;;;;;;;;;;;IAU5B,SAAS;cAAT,SAAS;;AAEA,aAFT,SAAS,CAEC,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,GAAG,EAAE;8BAFtC,SAAS;;AAIP,mCAJF,SAAS,6CAID,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,GAAG,EAAE;AAClC,YAAI,CAAC,gBAAgB,GAAG,CAAC,SAAS,CAAC,CAAC;KAEvC;;iBAPC,SAAS;;eASA,qBAAC,QAAQ,EAAE,GAAG,EAAE;;AAEvB,mBAAO,IAAI,SAAS,CAAC,QAAQ,CAAC,QAAQ,EAClC,qCAAkB,SAAS,EAAE,QAAQ,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;SAEvE;;;eAEU,uBAAG,EAGb;;;eAEQ,mBAAC,KAAK,EAAE,GAAG,EAAE,OAAO,EAAE;;;AAE3B,gBAAI,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,iCAAc,IAAI,CAAC,IAAI,EAAK,KAAK,SAAI,IAAI,CAAC,IAAI,CAAG,CAAC;AACrF,gBAAI,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC;;AAEvC,kBAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CACnB,OAAO,CAAC,UAAA,KAAK;uBACT,MAAK,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,UAAA,MAAM;2BAC/C,4BAAU,MAAM,EAAK,IAAI,SAAI,KAAK,EAAI,CAAC,MAAK,WAAW,CAAC,IAAI,OAAM,CAAC,CAAC,MAAM,CACtE,OAAO,CAAC,QAAQ,CAAC,MAAM,EAAK,IAAI,SAAI,KAAK,EAAI,MAAM,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC;iBAAA,CAAC;aAAA,CAAC,CAAC;;AAEzF,gBAAI,CAAC,UAAU,CAAC,SAAS,CAAC,IAAI,EAAE,GAAG,EAAE,OAAO,CAAC,CAAC;SAEjD;;;WAlCC,SAAS;;;qBAsCA,SAAS","file":"ApiModule.js","sourcesContent":["import Configuration from '../common/Configuration';\nimport Module from '../common/Module';\nimport Route from '../route/Route';\n\n/**\n * Module\n * @param {string} fqn The name of the module prefixed with its parent modules \n * @param {string} path \n * @param {Configuration} config \n * @param {Loader} loader \n * @param {Application} app \n */\nclass ApiModule extends Module {\n\n    constructor(name, config, context, app) {\n\n        super(name, config, context, app);\n        this.__defaultFilters = ['default'];\n\n    }\n\n    __submodule(resource, app) {\n\n        return new ApiModule(resource.basename,\n            new Configuration('apiconf', resource.path), this.context, app);\n\n    }\n\n    __framework() {\n\n\n    }\n\n    __routing(point, app, actions) {\n\n        var path = this.configuration.read(Configuration.keys.PATH, `${point}/${this.name}`);\n        var routes = this.configuration.routes;\n\n        Object.keys(routes).\n        forEach(route =>\n            this.routes = Object.keys(routes[route]).map(method =>\n                new Route(method, `${path}/${route}`, [this.handleRoute.bind(this)].concat(\n                    actions.generate(method, `${path}/${route}`, routes[route][method])), app)));\n\n        this.submodules.__routing(path, app, actions);\n\n    }\n\n}\n\nexport default ApiModule\n"]}