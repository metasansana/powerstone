{"version":3,"sources":["../../src/api/Application.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;wBAAoB,UAAU;;;;uBACV,SAAS;;;;yBACN,WAAW;;;;mCACR,yBAAyB;;;;iCACvB,uBAAuB;;;;sCACtB,4BAA4B;;;;mCAC/B,yBAAyB;;;;yBAC7B,aAAa;;;;iCACV,uBAAuB;;IAApC,OAAO;;IAEb,WAAW;cAAX,WAAW;;aAAX,WAAW;8BAAX,WAAW;;mCAAX,WAAW;;;iBAAX,WAAW;;eAEJ,mBAAC,IAAI,EAAE;AACZ,mBAAO,2BAAc,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC;SAC3C;;;eAEE,eAAG;;;AAEF,mBAAO,2BART,WAAW,qCAST,IAAI,CAAC,YAAM;;AAEP,oBAAI,MAAM,GAAG,iCAAc,eAAe,uBAAU,MAAK,OAAO,CAAC,IAAI,CAAC,CAAC;;AAEvE,sBAAK,SAAS,CAAC,OAAO,CAAC,OAAO,GAAG,4BAAW,MAAK,SAAS,CAAC,OAAO,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;AACrF,sBAAK,OAAO,CAAC,IAAI,CAAC,gBAAgB,CAAC,MAAK,SAAS,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;AACnE,sBAAK,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,aAAa,EAAE,cAAc,CAAC,EAAE,EAAE,CAAC,CAAC;;AAEvE,sBAAK,MAAM,GAAG,qCACV,MAAK,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,MAAM,EAAE,OAAO,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC,EAClF,MAAK,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,MAAM,EAAE,OAAO,CAAC,GAAG,CAAC,IAAI,IAAI,SAAS,CAAC,EACvF,wCAAqB,MAAM,CAAC,CAAC,CAAC;;AAElC,uBAAO,MAAK,MAAM,CAAC,KAAK,EAAE,CAAC;aAE9B,CAAC,CACF,IAAI,CAAC,UAAA,IAAI;uBAAI,MAAK,OAAO,CAAC,IAAI,CAAC,MAAK,MAAM,CAAC,OAAO,EAAE,IAAI,QAAO;aAAA,CAAC,SAC3D,CAAC,UAAA,GAAG;uBAAI,MAAK,OAAO,CAAC,IAAI,CAAC,MAAK,MAAM,CAAC,KAAK,EAAE,GAAG,QAAO;aAAA,CAAC,CAAC;SAEjE;;;WA5BC,WAAW;;;qBAgCF,WAAW","file":"Application.js","sourcesContent":["import Promise from 'bluebird';\nimport restify from 'restify';\nimport deep_merge from 'deepmerge';\nimport ServerFactory from '../common/ServerFactory';\nimport BaseApplication from '../common/Application';\nimport PowerstoneServer from '../common/PowerstoneServer';\nimport ManagedServer from '../common/ManagedServer';\nimport ApiLoader from './ApiLoader';\nimport * as plugins from '../middleware/restify';\n\nclass Application extends BaseApplication {\n\n    getLoader(path) {\n        return new ApiLoader(path || this.path);\n    }\n\n    run() {\n\n        return super.run().\n        then(() => {\n\n            var engine = ServerFactory.createApiServer(restify, this.modules.main);\n\n            this.framework.restify.plugins = deep_merge(this.framework.restify.plugins, plugins);\n            this.modules.main.restifyFramework(this.framework.restify.plugins);\n            this.modules.main.restify(engine, ['body_parser', 'query_parser'], '');\n\n            this.server = new ManagedServer(\n                this.modules.main.configuration.readWithDefaults('port', process.env.PORT || 3000),\n                this.modules.main.configuration.readWithDefaults('host', process.env.HOST || '0.0.0.0'),\n                new PowerstoneServer(engine));\n\n            return this.server.start();\n\n        }).\n        then(port => this._events.emit(this.events.STARTED, port, this)).\n        catch(err => this._events.emit(this.events.ERROR, err, this));\n\n    }\n\n}\n\nexport default Application\n"]}