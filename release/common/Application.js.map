{"version":3,"sources":["../../src/common/Application.js"],"names":[],"mappings":";;;;;;;;;;;;;;4BAAqB,eAAe;;;;sBACjB,UAAU;;;;oBACP,SAAS;;IAAnB,IAAI;;yBACG,eAAe;;;;uBACjB,aAAa;;;;yBACX,eAAe;;;;yBACf,eAAe;;;;;;;;;;;;;;;;;;;;;IAkB5B,WAAW;AAEF,aAFT,WAAW,CAED,IAAI,EAAE;8BAFhB,WAAW;;AAIT,YAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACjB,YAAI,CAAC,IAAI,GAAG,MAAM,CAAC;AACnB,YAAI,CAAC,MAAM,GAAG,IAAI,CAAC;AACnB,YAAI,CAAC,OAAO,GAAG,EAAE,CAAC;AAClB,YAAI,CAAC,WAAW,GAAG,EAAE,CAAC;AACtB,YAAI,CAAC,MAAM,yBAAS,CAAC;AACrB,YAAI,CAAC,UAAU,GAAG,EAAE,CAAC;AACrB,YAAI,CAAC,IAAI,uBAAO,CAAC;AACjB,YAAI,CAAC,MAAM,yBAAS,CAAC;AACrB,YAAI,CAAC,SAAS,GAAG;AACb,iBAAK,EAAE;AACH,uBAAO,EAAE,EAAE;AACX,uBAAO,EAAE,EAAE;aACd;AACD,eAAG,EAAE,EAAE;AACP,kBAAM,EAAE,EAAE;AACV,sBAAU,EAAE,EAAE;AACd,mBAAO,EAAE;AACL,uBAAO,EAAE,EAAE;AACX,0BAAU,EAAE,EAAE;aACjB;AACD,mBAAO,EAAE;AACL,uBAAO,EAAE,EAAE;aACd;SACJ,CAAC;AACF,YAAI,CAAC,MAAM,GAAG;AACV,iBAAK,EAAE,OAAO;AACd,mBAAO,EAAE,SAAS;AAClB,mBAAO,EAAE,SAAS;SACrB,CAAC;AACF,YAAI,CAAC,OAAO,yBAAS,CAAC;KAEzB;;;;;;iBApCC,WAAW;;eAyCX,cAAG;AACD,gBAAI,CAAC,OAAO,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;SAClD;;;eAEG,gBAAG;AACH,mBAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;SAC3D;;;;;;;;;eAOE,eAAG,EAEL;;;WAxDC,WAAW;;;qBA4DF,WAAW","file":"Application.js","sourcesContent":["import Property from 'property-seek';\nimport Module from './Module';\nimport * as util from '../util';\nimport models from '../usr/models';\nimport pool from '../usr/pool';\nimport events from '../usr/events';\nimport shared from '../usr/shared';\n\n/**\n * Application is the main class of the framework.\n * @param {string} path The path to intialize this Application to. \n *\n * @property {Module} main - The main Module for this Application.\n * @property {ManagedServer} server - The managed http server.  \n * @property {object} modules - Modules loaded into memory.\n * @property {object} controllers - Controllers loaded into memory.\n * @property {object} models - Models loaded into memory.\n * @property {object} middleware - Middleware loaded into memory.\n * @property {ManagedServer|null} server - The internal managed server that serves clients.\n * @property {object} pool - A pool of connections the Application has made.\n * @property {object} framework.express - Loaded modules for express\n * @property {object} framework.restify - Loaded modules for restify\n * @property {object} framework.pipes - Loaded modules for the pipes framework\n */\nclass Application {\n\n    constructor(path) {\n\n        this.path = path;\n        this.name = 'main';\n        this.server = null;\n        this.modules = {};\n        this.controllers = {};\n        this.models = models;\n        this.middleware = {};\n        this.pool = pool;\n        this.shared = shared;\n        this.framework = {\n            pipes: {\n                filters: {},\n                defines: {}\n            },\n            run: {},\n            events: {},\n            connectors: {},\n            express: {\n                engines: {},\n                middleware: {}\n            },\n            restify: {\n                plugins: {}\n            }\n        };\n        this.events = {\n            ERROR: 'error',\n            STARTED: 'started',\n            ROUTING: 'routing'\n        };\n        this._events = events;\n\n    }\n\n    /**\n     * on \n     */\n    on() {\n        this._events.on.apply(this._events, arguments);\n    }\n\n    emit() {\n        return this._events.emit.apply(this._events, arguments);\n    }\n\n    /**\n     * run this Application\n     * @abstract\n     * @return {Promise}\n     */\n    run() {\n\n    }\n\n}\n\nexport default Application;\n"]}