{"version":3,"sources":["../../src/common/Application.js"],"names":[],"mappings":";;;;;;;;;;;;4BAAqB,eAAe;;;;sCACP,4BAA4B;;;;mCAC/B,yBAAyB;;;;;;;;;;;;;;;;;IAc7C,WAAW;AAEF,aAFT,WAAW,CAED,IAAI,EAAE;8BAFhB,WAAW;;AAIT,YAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACjB,YAAI,CAAC,IAAI,GAAG,MAAM,CAAC;AACnB,YAAI,CAAC,MAAM,GAAG,IAAI,CAAC;AACnB,YAAI,CAAC,WAAW,GAAG,EAAE,CAAC;AACtB,YAAI,CAAC,MAAM,GAAG,EAAE,CAAC;AACjB,YAAI,CAAC,UAAU,GAAG,EAAE,CAAC;AACrB,YAAI,CAAC,UAAU,GAAG,EAAE,CAAC;KAExB;;;;;;;iBAZC,WAAW;;eAkBF,uBAAG;;AAEV,mBAAO,IAAI,CAAC;SAEf;;;;;;;eAKC,cAAG;AACD,gBAAI,CAAC,OAAO,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;SAClD;;;eAEG,gBAAG;AACH,mBAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;SAC3D;;;;;;;;eAMI,iBAAG;;;AAEJ,gBAAI,IAAI,CAAC,MAAM,KAAK,IAAI,EACpB,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;;AAE/B,mBAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CACxC,IAAI,CAAC,YAAM;;AAGP,sBAAK,MAAM,GAAG,qCACV,MAAK,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,EAAE,OAAO,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC,EAC9D,MAAK,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,EAAE,OAAO,CAAC,GAAG,CAAC,IAAI,IAAI,SAAS,CAAC,EACnE,wCAAqB,MAAK,cAAc,EAAE,CAAC,CAAC,CAAC;;AAEjD,uBAAO,MAAK,MAAM,CAAC,KAAK,EAAE,CAAC;aAE9B,CAAC,CACF,IAAI,CAAC,UAAA,IAAI;uBAAI,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;aAAA,CAAC,CAAC;SAEnC;;;WA1DC,WAAW;;;qBA6DF,WAAW","file":"Application.js","sourcesContent":["import Property from 'property-seek';\nimport PowerstoneServer from '../common/PowerstoneServer';\nimport ManagedServer from '../common/ManagedServer';\n\n/**\n * Application is the main class of the framework.\n * @param {string} path The path to intialize this Application to. \n *\n * @property {Module} main - The main Module for this Application.\n * @property {ManagedServer} server - The managed http server.  \n * @property {object} controllers - Controllers loaded into memory.\n * @property {object} models - Models loaded into memory.\n * @property {object} connectors - Various connectors defined for establishing remote connections\n * @property {object} middleware - Middleware loaded into memory.\n * @property {ManagedServer|null} server - The internal managed server that serves clients.\n */\nclass Application {\n\n    constructor(path) {\n\n        this.path = path;\n        this.name = 'main';\n        this.server = null;\n        this.controllers = {};\n        this.models = {};\n        this.middleware = {};\n        this.connectors = {};\n\n    }\n\n    /**\n     * onConnected is called when connections have been established.\n     * @return {Promise|null}\n     */\n    onConnected() {\n\n        return null;\n\n    }\n\n    /**\n     * on \n     */\n    on() {\n        this._events.on.apply(this._events, arguments);\n    }\n\n    emit() {\n        return this._events.emit.apply(this._events, arguments);\n    }\n\n    /**\n     * start the server for this Application\n     * @return {Promise}\n     */\n    start() {\n\n        if (this.server !== null)\n            return this.server.start();\n\n        return this.main.load(this.frameworkApp).\n        then(() => {\n\n\n            this.server = new ManagedServer(\n                this.main.configuration.read('port', process.env.PORT || 3000),\n                this.main.configuration.read('host', process.env.HOST || '0.0.0.0'),\n                new PowerstoneServer(this.__createServer()));\n\n            return this.server.start();\n\n        }).\n        then(port => console.log(port));\n\n    }\n}\n\nexport default Application;\n"]}