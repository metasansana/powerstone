{"version":3,"sources":["../../src/common/Configuration.js"],"names":[],"mappings":"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","file":"Configuration.js","sourcesContent":["import Property from 'property-seek';\nimport merge from 'deepmerge';\nimport fs from 'fs';\nimport Path from 'path';\n\nfunction exists(path) {\n\n    try {\n        return fs.statSync(path).isFile();\n    } catch (e) {\n        return false;\n\n    }\n}\n\n\n/**\n * Configuration\n * @param {string} dir\n * @param {string} path \n * @property {object} keys\n * @property {string} path\n */\nclass Configuration {\n\n    constructor(dir, path) {\n\n        this.paths = {\n            root: path,\n            config: `${path}/${dir}/config.js`,\n            routes: `${path}/${dir}/routes.js`,\n            modules: `${path}/modules`,\n            connectors: `${path}/connectors`,\n            filters: `${path}/filters`,\n            middleware: `${path}/app/middleware`,\n            controllers: `${path}/app/controllers`\n        };\n\n        this.options = (exists(this.paths.config)) ? require(this.paths.config) : {};\n        this.routes = (exists(this.paths.routes)) ? require(this.paths.routes) : {};\n\n    }\n\n    read(key, defaults) {\n        var ret = Property.get(this.options, key);\n        if (ret) return ret;\n        return defaults;\n    }\n\n    readAndMerge(key, target, defaults) {\n        var ret = this.readWithDefaults(key, defaults);\n        return merge(target, ret);\n    }\n\n    /**\n     * require requires all files in a sub-directory into a single object\n     * @param {string} dir The  path.\n     * @param {object} merge An optional object functions can be merged into.\n     * @param {string} [prefix] A prefix that will be concatenated to the object's keys\n     * @returns {Object}\n     */\n    require(dir, merge, prefix) {\n\n        var files;\n        var extensions = extensions || ['.js', '.json'];\n\n        merge = merge || {};\n\n        prefix = prefix || '';\n        prefix = (prefix) ? prefix + '.' : prefix;\n        prefix = (prefix[0] === '/') ? prefix.replace('/', '') : prefix;\n        prefix = prefix.replace(/\\//g, '.');\n\n        try {\n            files = fs.readdirSync(dir);\n        } catch (e) {\n            return merge || {};\n        }\n        if (Array.isArray(files))\n            files.forEach((pathToFile) => {\n\n                if (extensions.indexOf(Path.extname(pathToFile)) < 0) return;\n\n                Property.set(merge, prefix + Path.basename(pathToFile, Path.extname(pathToFile)),\n                    require(dir + '/' + pathToFile));\n\n            });\n\n        return merge;\n    }\n\n}\n\nConfiguration.keys = {\n    MODULES: 'modules',\n    CONNECTIONS: 'connections',\n    MIDDLEWARE: 'middleware',\n    FILTERS: 'filters',\n    PATH: 'path'\n};\n\nexport default Configuration\n"]}