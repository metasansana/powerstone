{"version":3,"sources":["../../src/common/ServerFactory.js"],"names":[],"mappings":";;;;;;;;;;;;oBAAiB,MAAM;;;;qBACL,OAAO;;;;;;;;;;;IAQnB,aAAa;aAAb,aAAa;8BAAb,aAAa;;;iBAAb,aAAa;;;;;;;;eAOM,+BAAC,GAAG,EAAE;AACvB,mBAAO,kBAAK,YAAY,CAAC,GAAG,CAAC,CAAC;SACjC;;;;;;;;;;eAQ0B,qCAAC,OAAO,EAAE,GAAG,EAAE;AACtC,mBAAO,mBAAM,YAAY,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;SAC3C;;;eAEc,yBAAC,GAAG,EAAE,MAAM,EAAE;;AAEzB,gBAAI,OAAO,GAAG,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;;AAEvD,gBAAI,OAAO,EACP,OAAO,IAAI,CAAC,2BAA2B,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;;AAE1D,mBAAO,IAAI,CAAC,qBAAqB,CAAC,GAAG,CAAC,CAAC;SAC1C;;;WA7BC,aAAa;;;qBAiCJ,IAAI,aAAa,EAAE","file":"ServerFactory.js","sourcesContent":["import http from 'http';\nimport https from 'https';\n\n/**\n * ServerFactory provides new instances for http.Server or the\n * framework's own wrapper.\n *\n * Powerstone wraps these in its own wrapper to provide a maintainable api.\n */\nclass ServerFactory {\n\n    /**\n     * createNativeWebServer creates and returns a http.Server\n     * @param {express.Application} app\n     * @returns {*}\n     */\n    createNativeWebServer(app) {\n        return http.createServer(app);\n    }\n\n    /**\n     * createSecureNativeWebServer creates and returns a https.Server\n     * @param {Object} options\n     * @param {express.Application} app\n     * @returns {*}\n     */\n    createSecureNativeWebServer(options, app) {\n        return https.createServer(options, app);\n    }\n\n    createWebServer(app, module) {\n\n        var options = module.configuration.read('https', null);\n\n        if (options)\n            return this.createSecureNativeWebServer(options, app);\n\n        return this.createNativeWebServer(app);\n    }\n\n}\n\nexport default new ServerFactory();\n"]}