{"version":3,"sources":["../../../src/common/resource/SchemeResource.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;IAeM,cAAc;AAEL,aAFT,cAAc,CAEJ,QAAQ,EAAE;8BAFpB,cAAc;;AAIZ,YAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;AACzB,YAAI,CAAC,UAAU,GAAG,EAAE,CAAC;KAExB;;;;;;;;iBAPC,cAAc;;eAcb,aAAC,IAAI,EAAE,QAAQ,EAAE;;AAEhB,gBAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,QAAQ,CAAC;AACjC,mBAAO,IAAI,CAAC;SAEf;;;eAEG,cAAC,IAAI,EAAE;;AAEP,gBAAI,OAAO,IAAI,KAAM,QAAQ,EACzB,MAAM,IAAI,SAAS,CAAC,yDAAyD,CAAC,CAAC;;AAEnF,gBAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;AAC9B,gBAAI,MAAM,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;AACtB,gBAAI,QAAQ,GAAG,IAAI,CAAC;;AAEpB,gBAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;AACpB,wBAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;AACzB,oBAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;aACnB,MAAM;AACH,wBAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;AACnC,oBAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;aACnB;;AAED,mBAAO,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAE9B;;;WAxCC,cAAc;;;qBA4CL,cAAc","file":"SchemeResource.js","sourcesContent":["/**\n * SchemeResource provides an api that lets client code determine which\n * ResourceDelegate to invoke to locate a piece of code we want to utilize.\n *\n * It works by utilizing a URL like string where the scheme tells us what \n * delegate to use.\n * Example:\n * ```javascript\n *  \n *   'require://path-to-file-to-require'\n *\n * ```\n * @param {Resource} delegate The default ResourceDelegate to use if nothing else matches.\n * @implements {Resource}\n */\nclass SchemeResource {\n\n    constructor(delegate) {\n\n        this._default = delegate;\n        this._delegates = {};\n\n    }\n\n    /**\n     * add a delegate to the internal list\n     * @param {string} name \n     * @param {ResourceDelegate} delegate\n     */\n    add(name, delegate) {\n\n        this._delegates[name] = delegate;\n        return this;\n\n    }\n\n    find(path) {\n\n        if (typeof path !==  'string')\n            throw new TypeError('Value supplied for resource string is invalid or empty!');\n\n        var parts = path.split('://');\n        var scheme = parts[0];\n        var delegate = null;\n\n        if (parts.length === 1) {\n            delegate = this._default;\n            path = parts[0];\n        } else {\n            delegate = this._delegates[scheme];\n            path = parts[1];\n        }\n\n        return delegate.find(path);\n\n    }\n\n}\n\nexport default SchemeResource\n"]}