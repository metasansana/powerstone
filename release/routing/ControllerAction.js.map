{"version":3,"sources":["../../src/routing/ControllerAction.js"],"names":[],"mappings":";;;;;;;;;;;;AAEA,SAAS,aAAa,CAAC,MAAM,EAAE,WAAW,EAAE;;AAExC,QAAI,KAAK,CAAC;AACV,QAAI,UAAU,CAAC;AACf,QAAI,IAAI,CAAC;AACT,QAAI,IAAI,CAAC;AACT,QAAI,OAAO,GAAG,SAAV,OAAO,CAAY,GAAG,EAAE;;AAExB,WAAG,GAAG,GAAG,IAAI,EAAE,CAAC;;AAEhB,YAAI,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EACrB,IAAI,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EACrB,OAAO,IAAI,CAAC;KACvB,CAAA;;AAED,QAAI,OAAO,CAAC,MAAM,CAAC,EAAE;AACjB,aAAK,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AACvC,cAAM,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;KACxB,MAAM;AACH,aAAK,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;KAC7B;;AAED,QAAI,GAAG,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACvB,cAAU,GAAG,QAAQ,CAAC,GAAG,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;AAC7C,QAAI,GAAI,OAAO,UAAU,AAAC,CAAC;;AAE3B,YAAQ,IAAI;;AAER,aAAK,UAAU;AACX,kBAAM;;AAAA,AAEV,aAAK,QAAQ;AACT,kBAAM;;AAAA,AAEV;AACI,kBAAM,IAAI,KAAK,CAAC,kBAAe,IAAI,6EACW,YACrC,IAAI,SAAI,CAAC,CAAC;;AAAA,KAG1B;;AAED,WAAO,UAAU,CAAC;CACrB;;;;;IAIK,gBAAgB;AAEP,aAFT,gBAAgB,CAEN,WAAW,EAAE;8BAFvB,gBAAgB;;AAId,YAAI,CAAC,YAAY,GAAG,WAAW,CAAC;KAEnC;;iBANC,gBAAgB;;eAQZ,gBAAC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE;;AAGxB,gBAAI,OAAO,KAAK,CAAC,MAAM,KAAK,QAAQ,EAChC,OAAO,aAAa,CAAC,KAAK,CAAC,MAAM,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;;AAE1D,gBAAI,OAAO,KAAK,CAAC,MAAM,KAAK,UAAU,EAClC,OAAO,KAAK,CAAC,MAAM,CAAC;SAE3B;;;WAjBC,gBAAgB;;;qBAqBP,gBAAgB","file":"ControllerAction.js","sourcesContent":["//TODO Someday we will parse the action string with arguments and all, until then,\n//bare with me.\nfunction resolveAction(action, controllers) {\n\n    var split;\n    var Controller;\n    var path;\n    var type;\n    var is_call = function(str) {\n\n        str = str || '';\n\n        if (str.indexOf('(') > -1)\n            if (str.indexOf(')') > -1)\n                return true;\n    }\n\n    if (is_call(action)) {\n        split = action.slice(0, -2).split('.');\n        method = split.pop();\n    } else {\n        split = action.split('.');\n    }\n\n    path = split.join('.');\n    Controller = Property.get(controllers, path);\n    type = (typeof Controller);\n\n    switch (type) {\n\n        case 'function':\n            break;\n\n        case 'object':\n            break;\n\n        default:\n            throw new Error(`Controller '${path}' specified in route file ` +\n                `must be a constructor or an instance not` +\n                ` '${type}'!`);\n\n\n    }\n\n    return Controller;\n}\n/**\n * ControllerAction configures handlers for controllers.\n */\nclass ControllerAction {\n\n    constructor(controllers) {\n\n        this._controllers = controllers;\n\n    }\n\n    create(method, path, route) {\n\n\n        if (typeof route.action === 'string')\n            return resolveAction(route.action, this._controllers);\n\n        if (typeof route.action === 'function')\n            return route.action;\n\n    }\n\n}\n\nexport default ControllerAction\n"]}